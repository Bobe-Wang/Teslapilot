#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6440091693162022888) {
   out_6440091693162022888[0] = 0;
   out_6440091693162022888[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6440091693162022888[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6440091693162022888[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6440091693162022888[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6440091693162022888[5] = -sin(in_vec[1]);
   out_6440091693162022888[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6440091693162022888[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6440091693162022888[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6440091693162022888[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6440091693162022888[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6440091693162022888[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6440091693162022888[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6440091693162022888[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6440091693162022888[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6440091693162022888[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6440091693162022888[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6440091693162022888[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4045068409998732168) {
   out_4045068409998732168[0] = delta_x[0] + nom_x[0];
   out_4045068409998732168[1] = delta_x[1] + nom_x[1];
   out_4045068409998732168[2] = delta_x[2] + nom_x[2];
   out_4045068409998732168[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4045068409998732168[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4045068409998732168[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4045068409998732168[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4045068409998732168[7] = delta_x[6] + nom_x[7];
   out_4045068409998732168[8] = delta_x[7] + nom_x[8];
   out_4045068409998732168[9] = delta_x[8] + nom_x[9];
   out_4045068409998732168[10] = delta_x[9] + nom_x[10];
   out_4045068409998732168[11] = delta_x[10] + nom_x[11];
   out_4045068409998732168[12] = delta_x[11] + nom_x[12];
   out_4045068409998732168[13] = delta_x[12] + nom_x[13];
   out_4045068409998732168[14] = delta_x[13] + nom_x[14];
   out_4045068409998732168[15] = delta_x[14] + nom_x[15];
   out_4045068409998732168[16] = delta_x[15] + nom_x[16];
   out_4045068409998732168[17] = delta_x[16] + nom_x[17];
   out_4045068409998732168[18] = delta_x[17] + nom_x[18];
   out_4045068409998732168[19] = delta_x[18] + nom_x[19];
   out_4045068409998732168[20] = delta_x[19] + nom_x[20];
   out_4045068409998732168[21] = delta_x[20] + nom_x[21];
   out_4045068409998732168[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1130725816871523314) {
   out_1130725816871523314[0] = -nom_x[0] + true_x[0];
   out_1130725816871523314[1] = -nom_x[1] + true_x[1];
   out_1130725816871523314[2] = -nom_x[2] + true_x[2];
   out_1130725816871523314[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1130725816871523314[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1130725816871523314[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1130725816871523314[6] = -nom_x[7] + true_x[7];
   out_1130725816871523314[7] = -nom_x[8] + true_x[8];
   out_1130725816871523314[8] = -nom_x[9] + true_x[9];
   out_1130725816871523314[9] = -nom_x[10] + true_x[10];
   out_1130725816871523314[10] = -nom_x[11] + true_x[11];
   out_1130725816871523314[11] = -nom_x[12] + true_x[12];
   out_1130725816871523314[12] = -nom_x[13] + true_x[13];
   out_1130725816871523314[13] = -nom_x[14] + true_x[14];
   out_1130725816871523314[14] = -nom_x[15] + true_x[15];
   out_1130725816871523314[15] = -nom_x[16] + true_x[16];
   out_1130725816871523314[16] = -nom_x[17] + true_x[17];
   out_1130725816871523314[17] = -nom_x[18] + true_x[18];
   out_1130725816871523314[18] = -nom_x[19] + true_x[19];
   out_1130725816871523314[19] = -nom_x[20] + true_x[20];
   out_1130725816871523314[20] = -nom_x[21] + true_x[21];
   out_1130725816871523314[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_9057055102025961707) {
   out_9057055102025961707[0] = 1.0;
   out_9057055102025961707[1] = 0.0;
   out_9057055102025961707[2] = 0.0;
   out_9057055102025961707[3] = 0.0;
   out_9057055102025961707[4] = 0.0;
   out_9057055102025961707[5] = 0.0;
   out_9057055102025961707[6] = 0.0;
   out_9057055102025961707[7] = 0.0;
   out_9057055102025961707[8] = 0.0;
   out_9057055102025961707[9] = 0.0;
   out_9057055102025961707[10] = 0.0;
   out_9057055102025961707[11] = 0.0;
   out_9057055102025961707[12] = 0.0;
   out_9057055102025961707[13] = 0.0;
   out_9057055102025961707[14] = 0.0;
   out_9057055102025961707[15] = 0.0;
   out_9057055102025961707[16] = 0.0;
   out_9057055102025961707[17] = 0.0;
   out_9057055102025961707[18] = 0.0;
   out_9057055102025961707[19] = 0.0;
   out_9057055102025961707[20] = 0.0;
   out_9057055102025961707[21] = 0.0;
   out_9057055102025961707[22] = 0.0;
   out_9057055102025961707[23] = 1.0;
   out_9057055102025961707[24] = 0.0;
   out_9057055102025961707[25] = 0.0;
   out_9057055102025961707[26] = 0.0;
   out_9057055102025961707[27] = 0.0;
   out_9057055102025961707[28] = 0.0;
   out_9057055102025961707[29] = 0.0;
   out_9057055102025961707[30] = 0.0;
   out_9057055102025961707[31] = 0.0;
   out_9057055102025961707[32] = 0.0;
   out_9057055102025961707[33] = 0.0;
   out_9057055102025961707[34] = 0.0;
   out_9057055102025961707[35] = 0.0;
   out_9057055102025961707[36] = 0.0;
   out_9057055102025961707[37] = 0.0;
   out_9057055102025961707[38] = 0.0;
   out_9057055102025961707[39] = 0.0;
   out_9057055102025961707[40] = 0.0;
   out_9057055102025961707[41] = 0.0;
   out_9057055102025961707[42] = 0.0;
   out_9057055102025961707[43] = 0.0;
   out_9057055102025961707[44] = 0.0;
   out_9057055102025961707[45] = 0.0;
   out_9057055102025961707[46] = 1.0;
   out_9057055102025961707[47] = 0.0;
   out_9057055102025961707[48] = 0.0;
   out_9057055102025961707[49] = 0.0;
   out_9057055102025961707[50] = 0.0;
   out_9057055102025961707[51] = 0.0;
   out_9057055102025961707[52] = 0.0;
   out_9057055102025961707[53] = 0.0;
   out_9057055102025961707[54] = 0.0;
   out_9057055102025961707[55] = 0.0;
   out_9057055102025961707[56] = 0.0;
   out_9057055102025961707[57] = 0.0;
   out_9057055102025961707[58] = 0.0;
   out_9057055102025961707[59] = 0.0;
   out_9057055102025961707[60] = 0.0;
   out_9057055102025961707[61] = 0.0;
   out_9057055102025961707[62] = 0.0;
   out_9057055102025961707[63] = 0.0;
   out_9057055102025961707[64] = 0.0;
   out_9057055102025961707[65] = 0.0;
   out_9057055102025961707[66] = 0.0;
   out_9057055102025961707[67] = 0.0;
   out_9057055102025961707[68] = 0.0;
   out_9057055102025961707[69] = -0.5*state[4];
   out_9057055102025961707[70] = -0.5*state[5];
   out_9057055102025961707[71] = -0.5*state[6];
   out_9057055102025961707[72] = 0.0;
   out_9057055102025961707[73] = 0.0;
   out_9057055102025961707[74] = 0.0;
   out_9057055102025961707[75] = 0.0;
   out_9057055102025961707[76] = 0.0;
   out_9057055102025961707[77] = 0.0;
   out_9057055102025961707[78] = 0.0;
   out_9057055102025961707[79] = 0.0;
   out_9057055102025961707[80] = 0.0;
   out_9057055102025961707[81] = 0.0;
   out_9057055102025961707[82] = 0.0;
   out_9057055102025961707[83] = 0.0;
   out_9057055102025961707[84] = 0.0;
   out_9057055102025961707[85] = 0.0;
   out_9057055102025961707[86] = 0.0;
   out_9057055102025961707[87] = 0.0;
   out_9057055102025961707[88] = 0.0;
   out_9057055102025961707[89] = 0.0;
   out_9057055102025961707[90] = 0.0;
   out_9057055102025961707[91] = 0.5*state[3];
   out_9057055102025961707[92] = 0.5*state[6];
   out_9057055102025961707[93] = -0.5*state[5];
   out_9057055102025961707[94] = 0.0;
   out_9057055102025961707[95] = 0.0;
   out_9057055102025961707[96] = 0.0;
   out_9057055102025961707[97] = 0.0;
   out_9057055102025961707[98] = 0.0;
   out_9057055102025961707[99] = 0.0;
   out_9057055102025961707[100] = 0.0;
   out_9057055102025961707[101] = 0.0;
   out_9057055102025961707[102] = 0.0;
   out_9057055102025961707[103] = 0.0;
   out_9057055102025961707[104] = 0.0;
   out_9057055102025961707[105] = 0.0;
   out_9057055102025961707[106] = 0.0;
   out_9057055102025961707[107] = 0.0;
   out_9057055102025961707[108] = 0.0;
   out_9057055102025961707[109] = 0.0;
   out_9057055102025961707[110] = 0.0;
   out_9057055102025961707[111] = 0.0;
   out_9057055102025961707[112] = 0.0;
   out_9057055102025961707[113] = -0.5*state[6];
   out_9057055102025961707[114] = 0.5*state[3];
   out_9057055102025961707[115] = 0.5*state[4];
   out_9057055102025961707[116] = 0.0;
   out_9057055102025961707[117] = 0.0;
   out_9057055102025961707[118] = 0.0;
   out_9057055102025961707[119] = 0.0;
   out_9057055102025961707[120] = 0.0;
   out_9057055102025961707[121] = 0.0;
   out_9057055102025961707[122] = 0.0;
   out_9057055102025961707[123] = 0.0;
   out_9057055102025961707[124] = 0.0;
   out_9057055102025961707[125] = 0.0;
   out_9057055102025961707[126] = 0.0;
   out_9057055102025961707[127] = 0.0;
   out_9057055102025961707[128] = 0.0;
   out_9057055102025961707[129] = 0.0;
   out_9057055102025961707[130] = 0.0;
   out_9057055102025961707[131] = 0.0;
   out_9057055102025961707[132] = 0.0;
   out_9057055102025961707[133] = 0.0;
   out_9057055102025961707[134] = 0.0;
   out_9057055102025961707[135] = 0.5*state[5];
   out_9057055102025961707[136] = -0.5*state[4];
   out_9057055102025961707[137] = 0.5*state[3];
   out_9057055102025961707[138] = 0.0;
   out_9057055102025961707[139] = 0.0;
   out_9057055102025961707[140] = 0.0;
   out_9057055102025961707[141] = 0.0;
   out_9057055102025961707[142] = 0.0;
   out_9057055102025961707[143] = 0.0;
   out_9057055102025961707[144] = 0.0;
   out_9057055102025961707[145] = 0.0;
   out_9057055102025961707[146] = 0.0;
   out_9057055102025961707[147] = 0.0;
   out_9057055102025961707[148] = 0.0;
   out_9057055102025961707[149] = 0.0;
   out_9057055102025961707[150] = 0.0;
   out_9057055102025961707[151] = 0.0;
   out_9057055102025961707[152] = 0.0;
   out_9057055102025961707[153] = 0.0;
   out_9057055102025961707[154] = 0.0;
   out_9057055102025961707[155] = 0.0;
   out_9057055102025961707[156] = 0.0;
   out_9057055102025961707[157] = 0.0;
   out_9057055102025961707[158] = 0.0;
   out_9057055102025961707[159] = 0.0;
   out_9057055102025961707[160] = 1.0;
   out_9057055102025961707[161] = 0.0;
   out_9057055102025961707[162] = 0.0;
   out_9057055102025961707[163] = 0.0;
   out_9057055102025961707[164] = 0.0;
   out_9057055102025961707[165] = 0.0;
   out_9057055102025961707[166] = 0.0;
   out_9057055102025961707[167] = 0.0;
   out_9057055102025961707[168] = 0.0;
   out_9057055102025961707[169] = 0.0;
   out_9057055102025961707[170] = 0.0;
   out_9057055102025961707[171] = 0.0;
   out_9057055102025961707[172] = 0.0;
   out_9057055102025961707[173] = 0.0;
   out_9057055102025961707[174] = 0.0;
   out_9057055102025961707[175] = 0.0;
   out_9057055102025961707[176] = 0.0;
   out_9057055102025961707[177] = 0.0;
   out_9057055102025961707[178] = 0.0;
   out_9057055102025961707[179] = 0.0;
   out_9057055102025961707[180] = 0.0;
   out_9057055102025961707[181] = 0.0;
   out_9057055102025961707[182] = 0.0;
   out_9057055102025961707[183] = 1.0;
   out_9057055102025961707[184] = 0.0;
   out_9057055102025961707[185] = 0.0;
   out_9057055102025961707[186] = 0.0;
   out_9057055102025961707[187] = 0.0;
   out_9057055102025961707[188] = 0.0;
   out_9057055102025961707[189] = 0.0;
   out_9057055102025961707[190] = 0.0;
   out_9057055102025961707[191] = 0.0;
   out_9057055102025961707[192] = 0.0;
   out_9057055102025961707[193] = 0.0;
   out_9057055102025961707[194] = 0.0;
   out_9057055102025961707[195] = 0.0;
   out_9057055102025961707[196] = 0.0;
   out_9057055102025961707[197] = 0.0;
   out_9057055102025961707[198] = 0.0;
   out_9057055102025961707[199] = 0.0;
   out_9057055102025961707[200] = 0.0;
   out_9057055102025961707[201] = 0.0;
   out_9057055102025961707[202] = 0.0;
   out_9057055102025961707[203] = 0.0;
   out_9057055102025961707[204] = 0.0;
   out_9057055102025961707[205] = 0.0;
   out_9057055102025961707[206] = 1.0;
   out_9057055102025961707[207] = 0.0;
   out_9057055102025961707[208] = 0.0;
   out_9057055102025961707[209] = 0.0;
   out_9057055102025961707[210] = 0.0;
   out_9057055102025961707[211] = 0.0;
   out_9057055102025961707[212] = 0.0;
   out_9057055102025961707[213] = 0.0;
   out_9057055102025961707[214] = 0.0;
   out_9057055102025961707[215] = 0.0;
   out_9057055102025961707[216] = 0.0;
   out_9057055102025961707[217] = 0.0;
   out_9057055102025961707[218] = 0.0;
   out_9057055102025961707[219] = 0.0;
   out_9057055102025961707[220] = 0.0;
   out_9057055102025961707[221] = 0.0;
   out_9057055102025961707[222] = 0.0;
   out_9057055102025961707[223] = 0.0;
   out_9057055102025961707[224] = 0.0;
   out_9057055102025961707[225] = 0.0;
   out_9057055102025961707[226] = 0.0;
   out_9057055102025961707[227] = 0.0;
   out_9057055102025961707[228] = 0.0;
   out_9057055102025961707[229] = 1.0;
   out_9057055102025961707[230] = 0.0;
   out_9057055102025961707[231] = 0.0;
   out_9057055102025961707[232] = 0.0;
   out_9057055102025961707[233] = 0.0;
   out_9057055102025961707[234] = 0.0;
   out_9057055102025961707[235] = 0.0;
   out_9057055102025961707[236] = 0.0;
   out_9057055102025961707[237] = 0.0;
   out_9057055102025961707[238] = 0.0;
   out_9057055102025961707[239] = 0.0;
   out_9057055102025961707[240] = 0.0;
   out_9057055102025961707[241] = 0.0;
   out_9057055102025961707[242] = 0.0;
   out_9057055102025961707[243] = 0.0;
   out_9057055102025961707[244] = 0.0;
   out_9057055102025961707[245] = 0.0;
   out_9057055102025961707[246] = 0.0;
   out_9057055102025961707[247] = 0.0;
   out_9057055102025961707[248] = 0.0;
   out_9057055102025961707[249] = 0.0;
   out_9057055102025961707[250] = 0.0;
   out_9057055102025961707[251] = 0.0;
   out_9057055102025961707[252] = 1.0;
   out_9057055102025961707[253] = 0.0;
   out_9057055102025961707[254] = 0.0;
   out_9057055102025961707[255] = 0.0;
   out_9057055102025961707[256] = 0.0;
   out_9057055102025961707[257] = 0.0;
   out_9057055102025961707[258] = 0.0;
   out_9057055102025961707[259] = 0.0;
   out_9057055102025961707[260] = 0.0;
   out_9057055102025961707[261] = 0.0;
   out_9057055102025961707[262] = 0.0;
   out_9057055102025961707[263] = 0.0;
   out_9057055102025961707[264] = 0.0;
   out_9057055102025961707[265] = 0.0;
   out_9057055102025961707[266] = 0.0;
   out_9057055102025961707[267] = 0.0;
   out_9057055102025961707[268] = 0.0;
   out_9057055102025961707[269] = 0.0;
   out_9057055102025961707[270] = 0.0;
   out_9057055102025961707[271] = 0.0;
   out_9057055102025961707[272] = 0.0;
   out_9057055102025961707[273] = 0.0;
   out_9057055102025961707[274] = 0.0;
   out_9057055102025961707[275] = 1.0;
   out_9057055102025961707[276] = 0.0;
   out_9057055102025961707[277] = 0.0;
   out_9057055102025961707[278] = 0.0;
   out_9057055102025961707[279] = 0.0;
   out_9057055102025961707[280] = 0.0;
   out_9057055102025961707[281] = 0.0;
   out_9057055102025961707[282] = 0.0;
   out_9057055102025961707[283] = 0.0;
   out_9057055102025961707[284] = 0.0;
   out_9057055102025961707[285] = 0.0;
   out_9057055102025961707[286] = 0.0;
   out_9057055102025961707[287] = 0.0;
   out_9057055102025961707[288] = 0.0;
   out_9057055102025961707[289] = 0.0;
   out_9057055102025961707[290] = 0.0;
   out_9057055102025961707[291] = 0.0;
   out_9057055102025961707[292] = 0.0;
   out_9057055102025961707[293] = 0.0;
   out_9057055102025961707[294] = 0.0;
   out_9057055102025961707[295] = 0.0;
   out_9057055102025961707[296] = 0.0;
   out_9057055102025961707[297] = 0.0;
   out_9057055102025961707[298] = 1.0;
   out_9057055102025961707[299] = 0.0;
   out_9057055102025961707[300] = 0.0;
   out_9057055102025961707[301] = 0.0;
   out_9057055102025961707[302] = 0.0;
   out_9057055102025961707[303] = 0.0;
   out_9057055102025961707[304] = 0.0;
   out_9057055102025961707[305] = 0.0;
   out_9057055102025961707[306] = 0.0;
   out_9057055102025961707[307] = 0.0;
   out_9057055102025961707[308] = 0.0;
   out_9057055102025961707[309] = 0.0;
   out_9057055102025961707[310] = 0.0;
   out_9057055102025961707[311] = 0.0;
   out_9057055102025961707[312] = 0.0;
   out_9057055102025961707[313] = 0.0;
   out_9057055102025961707[314] = 0.0;
   out_9057055102025961707[315] = 0.0;
   out_9057055102025961707[316] = 0.0;
   out_9057055102025961707[317] = 0.0;
   out_9057055102025961707[318] = 0.0;
   out_9057055102025961707[319] = 0.0;
   out_9057055102025961707[320] = 0.0;
   out_9057055102025961707[321] = 1.0;
   out_9057055102025961707[322] = 0.0;
   out_9057055102025961707[323] = 0.0;
   out_9057055102025961707[324] = 0.0;
   out_9057055102025961707[325] = 0.0;
   out_9057055102025961707[326] = 0.0;
   out_9057055102025961707[327] = 0.0;
   out_9057055102025961707[328] = 0.0;
   out_9057055102025961707[329] = 0.0;
   out_9057055102025961707[330] = 0.0;
   out_9057055102025961707[331] = 0.0;
   out_9057055102025961707[332] = 0.0;
   out_9057055102025961707[333] = 0.0;
   out_9057055102025961707[334] = 0.0;
   out_9057055102025961707[335] = 0.0;
   out_9057055102025961707[336] = 0.0;
   out_9057055102025961707[337] = 0.0;
   out_9057055102025961707[338] = 0.0;
   out_9057055102025961707[339] = 0.0;
   out_9057055102025961707[340] = 0.0;
   out_9057055102025961707[341] = 0.0;
   out_9057055102025961707[342] = 0.0;
   out_9057055102025961707[343] = 0.0;
   out_9057055102025961707[344] = 1.0;
   out_9057055102025961707[345] = 0.0;
   out_9057055102025961707[346] = 0.0;
   out_9057055102025961707[347] = 0.0;
   out_9057055102025961707[348] = 0.0;
   out_9057055102025961707[349] = 0.0;
   out_9057055102025961707[350] = 0.0;
   out_9057055102025961707[351] = 0.0;
   out_9057055102025961707[352] = 0.0;
   out_9057055102025961707[353] = 0.0;
   out_9057055102025961707[354] = 0.0;
   out_9057055102025961707[355] = 0.0;
   out_9057055102025961707[356] = 0.0;
   out_9057055102025961707[357] = 0.0;
   out_9057055102025961707[358] = 0.0;
   out_9057055102025961707[359] = 0.0;
   out_9057055102025961707[360] = 0.0;
   out_9057055102025961707[361] = 0.0;
   out_9057055102025961707[362] = 0.0;
   out_9057055102025961707[363] = 0.0;
   out_9057055102025961707[364] = 0.0;
   out_9057055102025961707[365] = 0.0;
   out_9057055102025961707[366] = 0.0;
   out_9057055102025961707[367] = 1.0;
   out_9057055102025961707[368] = 0.0;
   out_9057055102025961707[369] = 0.0;
   out_9057055102025961707[370] = 0.0;
   out_9057055102025961707[371] = 0.0;
   out_9057055102025961707[372] = 0.0;
   out_9057055102025961707[373] = 0.0;
   out_9057055102025961707[374] = 0.0;
   out_9057055102025961707[375] = 0.0;
   out_9057055102025961707[376] = 0.0;
   out_9057055102025961707[377] = 0.0;
   out_9057055102025961707[378] = 0.0;
   out_9057055102025961707[379] = 0.0;
   out_9057055102025961707[380] = 0.0;
   out_9057055102025961707[381] = 0.0;
   out_9057055102025961707[382] = 0.0;
   out_9057055102025961707[383] = 0.0;
   out_9057055102025961707[384] = 0.0;
   out_9057055102025961707[385] = 0.0;
   out_9057055102025961707[386] = 0.0;
   out_9057055102025961707[387] = 0.0;
   out_9057055102025961707[388] = 0.0;
   out_9057055102025961707[389] = 0.0;
   out_9057055102025961707[390] = 1.0;
   out_9057055102025961707[391] = 0.0;
   out_9057055102025961707[392] = 0.0;
   out_9057055102025961707[393] = 0.0;
   out_9057055102025961707[394] = 0.0;
   out_9057055102025961707[395] = 0.0;
   out_9057055102025961707[396] = 0.0;
   out_9057055102025961707[397] = 0.0;
   out_9057055102025961707[398] = 0.0;
   out_9057055102025961707[399] = 0.0;
   out_9057055102025961707[400] = 0.0;
   out_9057055102025961707[401] = 0.0;
   out_9057055102025961707[402] = 0.0;
   out_9057055102025961707[403] = 0.0;
   out_9057055102025961707[404] = 0.0;
   out_9057055102025961707[405] = 0.0;
   out_9057055102025961707[406] = 0.0;
   out_9057055102025961707[407] = 0.0;
   out_9057055102025961707[408] = 0.0;
   out_9057055102025961707[409] = 0.0;
   out_9057055102025961707[410] = 0.0;
   out_9057055102025961707[411] = 0.0;
   out_9057055102025961707[412] = 0.0;
   out_9057055102025961707[413] = 1.0;
   out_9057055102025961707[414] = 0.0;
   out_9057055102025961707[415] = 0.0;
   out_9057055102025961707[416] = 0.0;
   out_9057055102025961707[417] = 0.0;
   out_9057055102025961707[418] = 0.0;
   out_9057055102025961707[419] = 0.0;
   out_9057055102025961707[420] = 0.0;
   out_9057055102025961707[421] = 0.0;
   out_9057055102025961707[422] = 0.0;
   out_9057055102025961707[423] = 0.0;
   out_9057055102025961707[424] = 0.0;
   out_9057055102025961707[425] = 0.0;
   out_9057055102025961707[426] = 0.0;
   out_9057055102025961707[427] = 0.0;
   out_9057055102025961707[428] = 0.0;
   out_9057055102025961707[429] = 0.0;
   out_9057055102025961707[430] = 0.0;
   out_9057055102025961707[431] = 0.0;
   out_9057055102025961707[432] = 0.0;
   out_9057055102025961707[433] = 0.0;
   out_9057055102025961707[434] = 0.0;
   out_9057055102025961707[435] = 0.0;
   out_9057055102025961707[436] = 1.0;
   out_9057055102025961707[437] = 0.0;
   out_9057055102025961707[438] = 0.0;
   out_9057055102025961707[439] = 0.0;
   out_9057055102025961707[440] = 0.0;
   out_9057055102025961707[441] = 0.0;
   out_9057055102025961707[442] = 0.0;
   out_9057055102025961707[443] = 0.0;
   out_9057055102025961707[444] = 0.0;
   out_9057055102025961707[445] = 0.0;
   out_9057055102025961707[446] = 0.0;
   out_9057055102025961707[447] = 0.0;
   out_9057055102025961707[448] = 0.0;
   out_9057055102025961707[449] = 0.0;
   out_9057055102025961707[450] = 0.0;
   out_9057055102025961707[451] = 0.0;
   out_9057055102025961707[452] = 0.0;
   out_9057055102025961707[453] = 0.0;
   out_9057055102025961707[454] = 0.0;
   out_9057055102025961707[455] = 0.0;
   out_9057055102025961707[456] = 0.0;
   out_9057055102025961707[457] = 0.0;
   out_9057055102025961707[458] = 0.0;
   out_9057055102025961707[459] = 1.0;
   out_9057055102025961707[460] = 0.0;
   out_9057055102025961707[461] = 0.0;
   out_9057055102025961707[462] = 0.0;
   out_9057055102025961707[463] = 0.0;
   out_9057055102025961707[464] = 0.0;
   out_9057055102025961707[465] = 0.0;
   out_9057055102025961707[466] = 0.0;
   out_9057055102025961707[467] = 0.0;
   out_9057055102025961707[468] = 0.0;
   out_9057055102025961707[469] = 0.0;
   out_9057055102025961707[470] = 0.0;
   out_9057055102025961707[471] = 0.0;
   out_9057055102025961707[472] = 0.0;
   out_9057055102025961707[473] = 0.0;
   out_9057055102025961707[474] = 0.0;
   out_9057055102025961707[475] = 0.0;
   out_9057055102025961707[476] = 0.0;
   out_9057055102025961707[477] = 0.0;
   out_9057055102025961707[478] = 0.0;
   out_9057055102025961707[479] = 0.0;
   out_9057055102025961707[480] = 0.0;
   out_9057055102025961707[481] = 0.0;
   out_9057055102025961707[482] = 1.0;
   out_9057055102025961707[483] = 0.0;
   out_9057055102025961707[484] = 0.0;
   out_9057055102025961707[485] = 0.0;
   out_9057055102025961707[486] = 0.0;
   out_9057055102025961707[487] = 0.0;
   out_9057055102025961707[488] = 0.0;
   out_9057055102025961707[489] = 0.0;
   out_9057055102025961707[490] = 0.0;
   out_9057055102025961707[491] = 0.0;
   out_9057055102025961707[492] = 0.0;
   out_9057055102025961707[493] = 0.0;
   out_9057055102025961707[494] = 0.0;
   out_9057055102025961707[495] = 0.0;
   out_9057055102025961707[496] = 0.0;
   out_9057055102025961707[497] = 0.0;
   out_9057055102025961707[498] = 0.0;
   out_9057055102025961707[499] = 0.0;
   out_9057055102025961707[500] = 0.0;
   out_9057055102025961707[501] = 0.0;
   out_9057055102025961707[502] = 0.0;
   out_9057055102025961707[503] = 0.0;
   out_9057055102025961707[504] = 0.0;
   out_9057055102025961707[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_2924345871061403756) {
   out_2924345871061403756[0] = dt*state[7] + state[0];
   out_2924345871061403756[1] = dt*state[8] + state[1];
   out_2924345871061403756[2] = dt*state[9] + state[2];
   out_2924345871061403756[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2924345871061403756[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2924345871061403756[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2924345871061403756[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2924345871061403756[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_2924345871061403756[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_2924345871061403756[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_2924345871061403756[10] = state[10];
   out_2924345871061403756[11] = state[11];
   out_2924345871061403756[12] = state[12];
   out_2924345871061403756[13] = state[13];
   out_2924345871061403756[14] = state[14];
   out_2924345871061403756[15] = state[15];
   out_2924345871061403756[16] = state[16];
   out_2924345871061403756[17] = state[17];
   out_2924345871061403756[18] = state[18];
   out_2924345871061403756[19] = state[19];
   out_2924345871061403756[20] = state[20];
   out_2924345871061403756[21] = state[21];
   out_2924345871061403756[22] = state[22];
}
void F_fun(double *state, double dt, double *out_1613889119122228654) {
   out_1613889119122228654[0] = 1;
   out_1613889119122228654[1] = 0;
   out_1613889119122228654[2] = 0;
   out_1613889119122228654[3] = 0;
   out_1613889119122228654[4] = 0;
   out_1613889119122228654[5] = 0;
   out_1613889119122228654[6] = dt;
   out_1613889119122228654[7] = 0;
   out_1613889119122228654[8] = 0;
   out_1613889119122228654[9] = 0;
   out_1613889119122228654[10] = 0;
   out_1613889119122228654[11] = 0;
   out_1613889119122228654[12] = 0;
   out_1613889119122228654[13] = 0;
   out_1613889119122228654[14] = 0;
   out_1613889119122228654[15] = 0;
   out_1613889119122228654[16] = 0;
   out_1613889119122228654[17] = 0;
   out_1613889119122228654[18] = 0;
   out_1613889119122228654[19] = 0;
   out_1613889119122228654[20] = 0;
   out_1613889119122228654[21] = 0;
   out_1613889119122228654[22] = 0;
   out_1613889119122228654[23] = 1;
   out_1613889119122228654[24] = 0;
   out_1613889119122228654[25] = 0;
   out_1613889119122228654[26] = 0;
   out_1613889119122228654[27] = 0;
   out_1613889119122228654[28] = 0;
   out_1613889119122228654[29] = dt;
   out_1613889119122228654[30] = 0;
   out_1613889119122228654[31] = 0;
   out_1613889119122228654[32] = 0;
   out_1613889119122228654[33] = 0;
   out_1613889119122228654[34] = 0;
   out_1613889119122228654[35] = 0;
   out_1613889119122228654[36] = 0;
   out_1613889119122228654[37] = 0;
   out_1613889119122228654[38] = 0;
   out_1613889119122228654[39] = 0;
   out_1613889119122228654[40] = 0;
   out_1613889119122228654[41] = 0;
   out_1613889119122228654[42] = 0;
   out_1613889119122228654[43] = 0;
   out_1613889119122228654[44] = 0;
   out_1613889119122228654[45] = 0;
   out_1613889119122228654[46] = 1;
   out_1613889119122228654[47] = 0;
   out_1613889119122228654[48] = 0;
   out_1613889119122228654[49] = 0;
   out_1613889119122228654[50] = 0;
   out_1613889119122228654[51] = 0;
   out_1613889119122228654[52] = dt;
   out_1613889119122228654[53] = 0;
   out_1613889119122228654[54] = 0;
   out_1613889119122228654[55] = 0;
   out_1613889119122228654[56] = 0;
   out_1613889119122228654[57] = 0;
   out_1613889119122228654[58] = 0;
   out_1613889119122228654[59] = 0;
   out_1613889119122228654[60] = 0;
   out_1613889119122228654[61] = 0;
   out_1613889119122228654[62] = 0;
   out_1613889119122228654[63] = 0;
   out_1613889119122228654[64] = 0;
   out_1613889119122228654[65] = 0;
   out_1613889119122228654[66] = 0;
   out_1613889119122228654[67] = 0;
   out_1613889119122228654[68] = 0;
   out_1613889119122228654[69] = 1;
   out_1613889119122228654[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1613889119122228654[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1613889119122228654[72] = 0;
   out_1613889119122228654[73] = 0;
   out_1613889119122228654[74] = 0;
   out_1613889119122228654[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1613889119122228654[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1613889119122228654[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1613889119122228654[78] = 0;
   out_1613889119122228654[79] = 0;
   out_1613889119122228654[80] = 0;
   out_1613889119122228654[81] = 0;
   out_1613889119122228654[82] = 0;
   out_1613889119122228654[83] = 0;
   out_1613889119122228654[84] = 0;
   out_1613889119122228654[85] = 0;
   out_1613889119122228654[86] = 0;
   out_1613889119122228654[87] = 0;
   out_1613889119122228654[88] = 0;
   out_1613889119122228654[89] = 0;
   out_1613889119122228654[90] = 0;
   out_1613889119122228654[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1613889119122228654[92] = 1;
   out_1613889119122228654[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1613889119122228654[94] = 0;
   out_1613889119122228654[95] = 0;
   out_1613889119122228654[96] = 0;
   out_1613889119122228654[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1613889119122228654[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1613889119122228654[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1613889119122228654[100] = 0;
   out_1613889119122228654[101] = 0;
   out_1613889119122228654[102] = 0;
   out_1613889119122228654[103] = 0;
   out_1613889119122228654[104] = 0;
   out_1613889119122228654[105] = 0;
   out_1613889119122228654[106] = 0;
   out_1613889119122228654[107] = 0;
   out_1613889119122228654[108] = 0;
   out_1613889119122228654[109] = 0;
   out_1613889119122228654[110] = 0;
   out_1613889119122228654[111] = 0;
   out_1613889119122228654[112] = 0;
   out_1613889119122228654[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1613889119122228654[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1613889119122228654[115] = 1;
   out_1613889119122228654[116] = 0;
   out_1613889119122228654[117] = 0;
   out_1613889119122228654[118] = 0;
   out_1613889119122228654[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1613889119122228654[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1613889119122228654[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1613889119122228654[122] = 0;
   out_1613889119122228654[123] = 0;
   out_1613889119122228654[124] = 0;
   out_1613889119122228654[125] = 0;
   out_1613889119122228654[126] = 0;
   out_1613889119122228654[127] = 0;
   out_1613889119122228654[128] = 0;
   out_1613889119122228654[129] = 0;
   out_1613889119122228654[130] = 0;
   out_1613889119122228654[131] = 0;
   out_1613889119122228654[132] = 0;
   out_1613889119122228654[133] = 0;
   out_1613889119122228654[134] = 0;
   out_1613889119122228654[135] = 0;
   out_1613889119122228654[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1613889119122228654[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1613889119122228654[138] = 1;
   out_1613889119122228654[139] = 0;
   out_1613889119122228654[140] = 0;
   out_1613889119122228654[141] = 0;
   out_1613889119122228654[142] = 0;
   out_1613889119122228654[143] = 0;
   out_1613889119122228654[144] = 0;
   out_1613889119122228654[145] = 0;
   out_1613889119122228654[146] = 0;
   out_1613889119122228654[147] = 0;
   out_1613889119122228654[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1613889119122228654[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1613889119122228654[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1613889119122228654[151] = 0;
   out_1613889119122228654[152] = 0;
   out_1613889119122228654[153] = 0;
   out_1613889119122228654[154] = 0;
   out_1613889119122228654[155] = 0;
   out_1613889119122228654[156] = 0;
   out_1613889119122228654[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1613889119122228654[158] = 0;
   out_1613889119122228654[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1613889119122228654[160] = 0;
   out_1613889119122228654[161] = 1;
   out_1613889119122228654[162] = 0;
   out_1613889119122228654[163] = 0;
   out_1613889119122228654[164] = 0;
   out_1613889119122228654[165] = 0;
   out_1613889119122228654[166] = 0;
   out_1613889119122228654[167] = 0;
   out_1613889119122228654[168] = 0;
   out_1613889119122228654[169] = 0;
   out_1613889119122228654[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1613889119122228654[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1613889119122228654[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1613889119122228654[173] = 0;
   out_1613889119122228654[174] = 0;
   out_1613889119122228654[175] = 0;
   out_1613889119122228654[176] = 0;
   out_1613889119122228654[177] = 0;
   out_1613889119122228654[178] = 0;
   out_1613889119122228654[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_1613889119122228654[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1613889119122228654[181] = 0;
   out_1613889119122228654[182] = 0;
   out_1613889119122228654[183] = 0;
   out_1613889119122228654[184] = 1;
   out_1613889119122228654[185] = 0;
   out_1613889119122228654[186] = 0;
   out_1613889119122228654[187] = 0;
   out_1613889119122228654[188] = 0;
   out_1613889119122228654[189] = 0;
   out_1613889119122228654[190] = 0;
   out_1613889119122228654[191] = 0;
   out_1613889119122228654[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1613889119122228654[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1613889119122228654[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1613889119122228654[195] = 0;
   out_1613889119122228654[196] = 0;
   out_1613889119122228654[197] = 0;
   out_1613889119122228654[198] = 0;
   out_1613889119122228654[199] = 0;
   out_1613889119122228654[200] = 0;
   out_1613889119122228654[201] = 0;
   out_1613889119122228654[202] = 0;
   out_1613889119122228654[203] = 0;
   out_1613889119122228654[204] = 0;
   out_1613889119122228654[205] = 0;
   out_1613889119122228654[206] = 0;
   out_1613889119122228654[207] = 1;
   out_1613889119122228654[208] = 0;
   out_1613889119122228654[209] = 0;
   out_1613889119122228654[210] = 0;
   out_1613889119122228654[211] = 0;
   out_1613889119122228654[212] = 0;
   out_1613889119122228654[213] = 0;
   out_1613889119122228654[214] = 0;
   out_1613889119122228654[215] = 0;
   out_1613889119122228654[216] = 0;
   out_1613889119122228654[217] = 0;
   out_1613889119122228654[218] = 0;
   out_1613889119122228654[219] = 0;
   out_1613889119122228654[220] = 0;
   out_1613889119122228654[221] = 0;
   out_1613889119122228654[222] = 0;
   out_1613889119122228654[223] = 0;
   out_1613889119122228654[224] = 0;
   out_1613889119122228654[225] = 0;
   out_1613889119122228654[226] = 0;
   out_1613889119122228654[227] = 0;
   out_1613889119122228654[228] = 0;
   out_1613889119122228654[229] = 0;
   out_1613889119122228654[230] = 1;
   out_1613889119122228654[231] = 0;
   out_1613889119122228654[232] = 0;
   out_1613889119122228654[233] = 0;
   out_1613889119122228654[234] = 0;
   out_1613889119122228654[235] = 0;
   out_1613889119122228654[236] = 0;
   out_1613889119122228654[237] = 0;
   out_1613889119122228654[238] = 0;
   out_1613889119122228654[239] = 0;
   out_1613889119122228654[240] = 0;
   out_1613889119122228654[241] = 0;
   out_1613889119122228654[242] = 0;
   out_1613889119122228654[243] = 0;
   out_1613889119122228654[244] = 0;
   out_1613889119122228654[245] = 0;
   out_1613889119122228654[246] = 0;
   out_1613889119122228654[247] = 0;
   out_1613889119122228654[248] = 0;
   out_1613889119122228654[249] = 0;
   out_1613889119122228654[250] = 0;
   out_1613889119122228654[251] = 0;
   out_1613889119122228654[252] = 0;
   out_1613889119122228654[253] = 1;
   out_1613889119122228654[254] = 0;
   out_1613889119122228654[255] = 0;
   out_1613889119122228654[256] = 0;
   out_1613889119122228654[257] = 0;
   out_1613889119122228654[258] = 0;
   out_1613889119122228654[259] = 0;
   out_1613889119122228654[260] = 0;
   out_1613889119122228654[261] = 0;
   out_1613889119122228654[262] = 0;
   out_1613889119122228654[263] = 0;
   out_1613889119122228654[264] = 0;
   out_1613889119122228654[265] = 0;
   out_1613889119122228654[266] = 0;
   out_1613889119122228654[267] = 0;
   out_1613889119122228654[268] = 0;
   out_1613889119122228654[269] = 0;
   out_1613889119122228654[270] = 0;
   out_1613889119122228654[271] = 0;
   out_1613889119122228654[272] = 0;
   out_1613889119122228654[273] = 0;
   out_1613889119122228654[274] = 0;
   out_1613889119122228654[275] = 0;
   out_1613889119122228654[276] = 1;
   out_1613889119122228654[277] = 0;
   out_1613889119122228654[278] = 0;
   out_1613889119122228654[279] = 0;
   out_1613889119122228654[280] = 0;
   out_1613889119122228654[281] = 0;
   out_1613889119122228654[282] = 0;
   out_1613889119122228654[283] = 0;
   out_1613889119122228654[284] = 0;
   out_1613889119122228654[285] = 0;
   out_1613889119122228654[286] = 0;
   out_1613889119122228654[287] = 0;
   out_1613889119122228654[288] = 0;
   out_1613889119122228654[289] = 0;
   out_1613889119122228654[290] = 0;
   out_1613889119122228654[291] = 0;
   out_1613889119122228654[292] = 0;
   out_1613889119122228654[293] = 0;
   out_1613889119122228654[294] = 0;
   out_1613889119122228654[295] = 0;
   out_1613889119122228654[296] = 0;
   out_1613889119122228654[297] = 0;
   out_1613889119122228654[298] = 0;
   out_1613889119122228654[299] = 1;
   out_1613889119122228654[300] = 0;
   out_1613889119122228654[301] = 0;
   out_1613889119122228654[302] = 0;
   out_1613889119122228654[303] = 0;
   out_1613889119122228654[304] = 0;
   out_1613889119122228654[305] = 0;
   out_1613889119122228654[306] = 0;
   out_1613889119122228654[307] = 0;
   out_1613889119122228654[308] = 0;
   out_1613889119122228654[309] = 0;
   out_1613889119122228654[310] = 0;
   out_1613889119122228654[311] = 0;
   out_1613889119122228654[312] = 0;
   out_1613889119122228654[313] = 0;
   out_1613889119122228654[314] = 0;
   out_1613889119122228654[315] = 0;
   out_1613889119122228654[316] = 0;
   out_1613889119122228654[317] = 0;
   out_1613889119122228654[318] = 0;
   out_1613889119122228654[319] = 0;
   out_1613889119122228654[320] = 0;
   out_1613889119122228654[321] = 0;
   out_1613889119122228654[322] = 1;
   out_1613889119122228654[323] = 0;
   out_1613889119122228654[324] = 0;
   out_1613889119122228654[325] = 0;
   out_1613889119122228654[326] = 0;
   out_1613889119122228654[327] = 0;
   out_1613889119122228654[328] = 0;
   out_1613889119122228654[329] = 0;
   out_1613889119122228654[330] = 0;
   out_1613889119122228654[331] = 0;
   out_1613889119122228654[332] = 0;
   out_1613889119122228654[333] = 0;
   out_1613889119122228654[334] = 0;
   out_1613889119122228654[335] = 0;
   out_1613889119122228654[336] = 0;
   out_1613889119122228654[337] = 0;
   out_1613889119122228654[338] = 0;
   out_1613889119122228654[339] = 0;
   out_1613889119122228654[340] = 0;
   out_1613889119122228654[341] = 0;
   out_1613889119122228654[342] = 0;
   out_1613889119122228654[343] = 0;
   out_1613889119122228654[344] = 0;
   out_1613889119122228654[345] = 1;
   out_1613889119122228654[346] = 0;
   out_1613889119122228654[347] = 0;
   out_1613889119122228654[348] = 0;
   out_1613889119122228654[349] = 0;
   out_1613889119122228654[350] = 0;
   out_1613889119122228654[351] = 0;
   out_1613889119122228654[352] = 0;
   out_1613889119122228654[353] = 0;
   out_1613889119122228654[354] = 0;
   out_1613889119122228654[355] = 0;
   out_1613889119122228654[356] = 0;
   out_1613889119122228654[357] = 0;
   out_1613889119122228654[358] = 0;
   out_1613889119122228654[359] = 0;
   out_1613889119122228654[360] = 0;
   out_1613889119122228654[361] = 0;
   out_1613889119122228654[362] = 0;
   out_1613889119122228654[363] = 0;
   out_1613889119122228654[364] = 0;
   out_1613889119122228654[365] = 0;
   out_1613889119122228654[366] = 0;
   out_1613889119122228654[367] = 0;
   out_1613889119122228654[368] = 1;
   out_1613889119122228654[369] = 0;
   out_1613889119122228654[370] = 0;
   out_1613889119122228654[371] = 0;
   out_1613889119122228654[372] = 0;
   out_1613889119122228654[373] = 0;
   out_1613889119122228654[374] = 0;
   out_1613889119122228654[375] = 0;
   out_1613889119122228654[376] = 0;
   out_1613889119122228654[377] = 0;
   out_1613889119122228654[378] = 0;
   out_1613889119122228654[379] = 0;
   out_1613889119122228654[380] = 0;
   out_1613889119122228654[381] = 0;
   out_1613889119122228654[382] = 0;
   out_1613889119122228654[383] = 0;
   out_1613889119122228654[384] = 0;
   out_1613889119122228654[385] = 0;
   out_1613889119122228654[386] = 0;
   out_1613889119122228654[387] = 0;
   out_1613889119122228654[388] = 0;
   out_1613889119122228654[389] = 0;
   out_1613889119122228654[390] = 0;
   out_1613889119122228654[391] = 1;
   out_1613889119122228654[392] = 0;
   out_1613889119122228654[393] = 0;
   out_1613889119122228654[394] = 0;
   out_1613889119122228654[395] = 0;
   out_1613889119122228654[396] = 0;
   out_1613889119122228654[397] = 0;
   out_1613889119122228654[398] = 0;
   out_1613889119122228654[399] = 0;
   out_1613889119122228654[400] = 0;
   out_1613889119122228654[401] = 0;
   out_1613889119122228654[402] = 0;
   out_1613889119122228654[403] = 0;
   out_1613889119122228654[404] = 0;
   out_1613889119122228654[405] = 0;
   out_1613889119122228654[406] = 0;
   out_1613889119122228654[407] = 0;
   out_1613889119122228654[408] = 0;
   out_1613889119122228654[409] = 0;
   out_1613889119122228654[410] = 0;
   out_1613889119122228654[411] = 0;
   out_1613889119122228654[412] = 0;
   out_1613889119122228654[413] = 0;
   out_1613889119122228654[414] = 1;
   out_1613889119122228654[415] = 0;
   out_1613889119122228654[416] = 0;
   out_1613889119122228654[417] = 0;
   out_1613889119122228654[418] = 0;
   out_1613889119122228654[419] = 0;
   out_1613889119122228654[420] = 0;
   out_1613889119122228654[421] = 0;
   out_1613889119122228654[422] = 0;
   out_1613889119122228654[423] = 0;
   out_1613889119122228654[424] = 0;
   out_1613889119122228654[425] = 0;
   out_1613889119122228654[426] = 0;
   out_1613889119122228654[427] = 0;
   out_1613889119122228654[428] = 0;
   out_1613889119122228654[429] = 0;
   out_1613889119122228654[430] = 0;
   out_1613889119122228654[431] = 0;
   out_1613889119122228654[432] = 0;
   out_1613889119122228654[433] = 0;
   out_1613889119122228654[434] = 0;
   out_1613889119122228654[435] = 0;
   out_1613889119122228654[436] = 0;
   out_1613889119122228654[437] = 1;
   out_1613889119122228654[438] = 0;
   out_1613889119122228654[439] = 0;
   out_1613889119122228654[440] = 0;
   out_1613889119122228654[441] = 0;
   out_1613889119122228654[442] = 0;
   out_1613889119122228654[443] = 0;
   out_1613889119122228654[444] = 0;
   out_1613889119122228654[445] = 0;
   out_1613889119122228654[446] = 0;
   out_1613889119122228654[447] = 0;
   out_1613889119122228654[448] = 0;
   out_1613889119122228654[449] = 0;
   out_1613889119122228654[450] = 0;
   out_1613889119122228654[451] = 0;
   out_1613889119122228654[452] = 0;
   out_1613889119122228654[453] = 0;
   out_1613889119122228654[454] = 0;
   out_1613889119122228654[455] = 0;
   out_1613889119122228654[456] = 0;
   out_1613889119122228654[457] = 0;
   out_1613889119122228654[458] = 0;
   out_1613889119122228654[459] = 0;
   out_1613889119122228654[460] = 1;
   out_1613889119122228654[461] = 0;
   out_1613889119122228654[462] = 0;
   out_1613889119122228654[463] = 0;
   out_1613889119122228654[464] = 0;
   out_1613889119122228654[465] = 0;
   out_1613889119122228654[466] = 0;
   out_1613889119122228654[467] = 0;
   out_1613889119122228654[468] = 0;
   out_1613889119122228654[469] = 0;
   out_1613889119122228654[470] = 0;
   out_1613889119122228654[471] = 0;
   out_1613889119122228654[472] = 0;
   out_1613889119122228654[473] = 0;
   out_1613889119122228654[474] = 0;
   out_1613889119122228654[475] = 0;
   out_1613889119122228654[476] = 0;
   out_1613889119122228654[477] = 0;
   out_1613889119122228654[478] = 0;
   out_1613889119122228654[479] = 0;
   out_1613889119122228654[480] = 0;
   out_1613889119122228654[481] = 0;
   out_1613889119122228654[482] = 0;
   out_1613889119122228654[483] = 1;
}
void h_3(double *state, double *unused, double *out_5439543506784062287) {
   out_5439543506784062287[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_3280548030947440156) {
   out_3280548030947440156[0] = 0;
   out_3280548030947440156[1] = 0;
   out_3280548030947440156[2] = 0;
   out_3280548030947440156[3] = 0;
   out_3280548030947440156[4] = 0;
   out_3280548030947440156[5] = 0;
   out_3280548030947440156[6] = 0;
   out_3280548030947440156[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3280548030947440156[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3280548030947440156[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3280548030947440156[10] = 0;
   out_3280548030947440156[11] = 0;
   out_3280548030947440156[12] = 0;
   out_3280548030947440156[13] = 0;
   out_3280548030947440156[14] = 0;
   out_3280548030947440156[15] = 0;
   out_3280548030947440156[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3280548030947440156[17] = 0;
   out_3280548030947440156[18] = 0;
   out_3280548030947440156[19] = 0;
   out_3280548030947440156[20] = 0;
   out_3280548030947440156[21] = 0;
   out_3280548030947440156[22] = 0;
}
void h_4(double *state, double *unused, double *out_1525623624983305193) {
   out_1525623624983305193[0] = state[10] + state[13];
   out_1525623624983305193[1] = state[11] + state[14];
   out_1525623624983305193[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7560605787500324739) {
   out_7560605787500324739[0] = 0;
   out_7560605787500324739[1] = 0;
   out_7560605787500324739[2] = 0;
   out_7560605787500324739[3] = 0;
   out_7560605787500324739[4] = 0;
   out_7560605787500324739[5] = 0;
   out_7560605787500324739[6] = 0;
   out_7560605787500324739[7] = 0;
   out_7560605787500324739[8] = 0;
   out_7560605787500324739[9] = 0;
   out_7560605787500324739[10] = 1;
   out_7560605787500324739[11] = 0;
   out_7560605787500324739[12] = 0;
   out_7560605787500324739[13] = 1;
   out_7560605787500324739[14] = 0;
   out_7560605787500324739[15] = 0;
   out_7560605787500324739[16] = 0;
   out_7560605787500324739[17] = 0;
   out_7560605787500324739[18] = 0;
   out_7560605787500324739[19] = 0;
   out_7560605787500324739[20] = 0;
   out_7560605787500324739[21] = 0;
   out_7560605787500324739[22] = 0;
   out_7560605787500324739[23] = 0;
   out_7560605787500324739[24] = 0;
   out_7560605787500324739[25] = 0;
   out_7560605787500324739[26] = 0;
   out_7560605787500324739[27] = 0;
   out_7560605787500324739[28] = 0;
   out_7560605787500324739[29] = 0;
   out_7560605787500324739[30] = 0;
   out_7560605787500324739[31] = 0;
   out_7560605787500324739[32] = 0;
   out_7560605787500324739[33] = 0;
   out_7560605787500324739[34] = 1;
   out_7560605787500324739[35] = 0;
   out_7560605787500324739[36] = 0;
   out_7560605787500324739[37] = 1;
   out_7560605787500324739[38] = 0;
   out_7560605787500324739[39] = 0;
   out_7560605787500324739[40] = 0;
   out_7560605787500324739[41] = 0;
   out_7560605787500324739[42] = 0;
   out_7560605787500324739[43] = 0;
   out_7560605787500324739[44] = 0;
   out_7560605787500324739[45] = 0;
   out_7560605787500324739[46] = 0;
   out_7560605787500324739[47] = 0;
   out_7560605787500324739[48] = 0;
   out_7560605787500324739[49] = 0;
   out_7560605787500324739[50] = 0;
   out_7560605787500324739[51] = 0;
   out_7560605787500324739[52] = 0;
   out_7560605787500324739[53] = 0;
   out_7560605787500324739[54] = 0;
   out_7560605787500324739[55] = 0;
   out_7560605787500324739[56] = 0;
   out_7560605787500324739[57] = 0;
   out_7560605787500324739[58] = 1;
   out_7560605787500324739[59] = 0;
   out_7560605787500324739[60] = 0;
   out_7560605787500324739[61] = 1;
   out_7560605787500324739[62] = 0;
   out_7560605787500324739[63] = 0;
   out_7560605787500324739[64] = 0;
   out_7560605787500324739[65] = 0;
   out_7560605787500324739[66] = 0;
   out_7560605787500324739[67] = 0;
   out_7560605787500324739[68] = 0;
}
void h_9(double *state, double *unused, double *out_149483631174059161) {
   out_149483631174059161[0] = state[10];
   out_149483631174059161[1] = state[11];
   out_149483631174059161[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2880753929280854046) {
   out_2880753929280854046[0] = 0;
   out_2880753929280854046[1] = 0;
   out_2880753929280854046[2] = 0;
   out_2880753929280854046[3] = 0;
   out_2880753929280854046[4] = 0;
   out_2880753929280854046[5] = 0;
   out_2880753929280854046[6] = 0;
   out_2880753929280854046[7] = 0;
   out_2880753929280854046[8] = 0;
   out_2880753929280854046[9] = 0;
   out_2880753929280854046[10] = 1;
   out_2880753929280854046[11] = 0;
   out_2880753929280854046[12] = 0;
   out_2880753929280854046[13] = 0;
   out_2880753929280854046[14] = 0;
   out_2880753929280854046[15] = 0;
   out_2880753929280854046[16] = 0;
   out_2880753929280854046[17] = 0;
   out_2880753929280854046[18] = 0;
   out_2880753929280854046[19] = 0;
   out_2880753929280854046[20] = 0;
   out_2880753929280854046[21] = 0;
   out_2880753929280854046[22] = 0;
   out_2880753929280854046[23] = 0;
   out_2880753929280854046[24] = 0;
   out_2880753929280854046[25] = 0;
   out_2880753929280854046[26] = 0;
   out_2880753929280854046[27] = 0;
   out_2880753929280854046[28] = 0;
   out_2880753929280854046[29] = 0;
   out_2880753929280854046[30] = 0;
   out_2880753929280854046[31] = 0;
   out_2880753929280854046[32] = 0;
   out_2880753929280854046[33] = 0;
   out_2880753929280854046[34] = 1;
   out_2880753929280854046[35] = 0;
   out_2880753929280854046[36] = 0;
   out_2880753929280854046[37] = 0;
   out_2880753929280854046[38] = 0;
   out_2880753929280854046[39] = 0;
   out_2880753929280854046[40] = 0;
   out_2880753929280854046[41] = 0;
   out_2880753929280854046[42] = 0;
   out_2880753929280854046[43] = 0;
   out_2880753929280854046[44] = 0;
   out_2880753929280854046[45] = 0;
   out_2880753929280854046[46] = 0;
   out_2880753929280854046[47] = 0;
   out_2880753929280854046[48] = 0;
   out_2880753929280854046[49] = 0;
   out_2880753929280854046[50] = 0;
   out_2880753929280854046[51] = 0;
   out_2880753929280854046[52] = 0;
   out_2880753929280854046[53] = 0;
   out_2880753929280854046[54] = 0;
   out_2880753929280854046[55] = 0;
   out_2880753929280854046[56] = 0;
   out_2880753929280854046[57] = 0;
   out_2880753929280854046[58] = 1;
   out_2880753929280854046[59] = 0;
   out_2880753929280854046[60] = 0;
   out_2880753929280854046[61] = 0;
   out_2880753929280854046[62] = 0;
   out_2880753929280854046[63] = 0;
   out_2880753929280854046[64] = 0;
   out_2880753929280854046[65] = 0;
   out_2880753929280854046[66] = 0;
   out_2880753929280854046[67] = 0;
   out_2880753929280854046[68] = 0;
}
void h_10(double *state, double *unused, double *out_5544878077703004476) {
   out_5544878077703004476[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_5544878077703004476[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_5544878077703004476[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_1592384890266115533) {
   out_1592384890266115533[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1592384890266115533[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1592384890266115533[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1592384890266115533[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1592384890266115533[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1592384890266115533[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1592384890266115533[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1592384890266115533[7] = 0;
   out_1592384890266115533[8] = 0;
   out_1592384890266115533[9] = 0;
   out_1592384890266115533[10] = 0;
   out_1592384890266115533[11] = 0;
   out_1592384890266115533[12] = 0;
   out_1592384890266115533[13] = 0;
   out_1592384890266115533[14] = 0;
   out_1592384890266115533[15] = 0;
   out_1592384890266115533[16] = 0;
   out_1592384890266115533[17] = 1;
   out_1592384890266115533[18] = 0;
   out_1592384890266115533[19] = 0;
   out_1592384890266115533[20] = 0;
   out_1592384890266115533[21] = 0;
   out_1592384890266115533[22] = 0;
   out_1592384890266115533[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1592384890266115533[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1592384890266115533[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1592384890266115533[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1592384890266115533[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1592384890266115533[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1592384890266115533[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1592384890266115533[30] = 0;
   out_1592384890266115533[31] = 0;
   out_1592384890266115533[32] = 0;
   out_1592384890266115533[33] = 0;
   out_1592384890266115533[34] = 0;
   out_1592384890266115533[35] = 0;
   out_1592384890266115533[36] = 0;
   out_1592384890266115533[37] = 0;
   out_1592384890266115533[38] = 0;
   out_1592384890266115533[39] = 0;
   out_1592384890266115533[40] = 0;
   out_1592384890266115533[41] = 1;
   out_1592384890266115533[42] = 0;
   out_1592384890266115533[43] = 0;
   out_1592384890266115533[44] = 0;
   out_1592384890266115533[45] = 0;
   out_1592384890266115533[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1592384890266115533[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1592384890266115533[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1592384890266115533[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1592384890266115533[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1592384890266115533[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1592384890266115533[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1592384890266115533[53] = 0;
   out_1592384890266115533[54] = 0;
   out_1592384890266115533[55] = 0;
   out_1592384890266115533[56] = 0;
   out_1592384890266115533[57] = 0;
   out_1592384890266115533[58] = 0;
   out_1592384890266115533[59] = 0;
   out_1592384890266115533[60] = 0;
   out_1592384890266115533[61] = 0;
   out_1592384890266115533[62] = 0;
   out_1592384890266115533[63] = 0;
   out_1592384890266115533[64] = 0;
   out_1592384890266115533[65] = 1;
   out_1592384890266115533[66] = 0;
   out_1592384890266115533[67] = 0;
   out_1592384890266115533[68] = 0;
}
void h_12(double *state, double *unused, double *out_1573182497905511634) {
   out_1573182497905511634[0] = state[0];
   out_1573182497905511634[1] = state[1];
   out_1573182497905511634[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8779582774470017308) {
   out_8779582774470017308[0] = 1;
   out_8779582774470017308[1] = 0;
   out_8779582774470017308[2] = 0;
   out_8779582774470017308[3] = 0;
   out_8779582774470017308[4] = 0;
   out_8779582774470017308[5] = 0;
   out_8779582774470017308[6] = 0;
   out_8779582774470017308[7] = 0;
   out_8779582774470017308[8] = 0;
   out_8779582774470017308[9] = 0;
   out_8779582774470017308[10] = 0;
   out_8779582774470017308[11] = 0;
   out_8779582774470017308[12] = 0;
   out_8779582774470017308[13] = 0;
   out_8779582774470017308[14] = 0;
   out_8779582774470017308[15] = 0;
   out_8779582774470017308[16] = 0;
   out_8779582774470017308[17] = 0;
   out_8779582774470017308[18] = 0;
   out_8779582774470017308[19] = 0;
   out_8779582774470017308[20] = 0;
   out_8779582774470017308[21] = 0;
   out_8779582774470017308[22] = 0;
   out_8779582774470017308[23] = 0;
   out_8779582774470017308[24] = 1;
   out_8779582774470017308[25] = 0;
   out_8779582774470017308[26] = 0;
   out_8779582774470017308[27] = 0;
   out_8779582774470017308[28] = 0;
   out_8779582774470017308[29] = 0;
   out_8779582774470017308[30] = 0;
   out_8779582774470017308[31] = 0;
   out_8779582774470017308[32] = 0;
   out_8779582774470017308[33] = 0;
   out_8779582774470017308[34] = 0;
   out_8779582774470017308[35] = 0;
   out_8779582774470017308[36] = 0;
   out_8779582774470017308[37] = 0;
   out_8779582774470017308[38] = 0;
   out_8779582774470017308[39] = 0;
   out_8779582774470017308[40] = 0;
   out_8779582774470017308[41] = 0;
   out_8779582774470017308[42] = 0;
   out_8779582774470017308[43] = 0;
   out_8779582774470017308[44] = 0;
   out_8779582774470017308[45] = 0;
   out_8779582774470017308[46] = 0;
   out_8779582774470017308[47] = 0;
   out_8779582774470017308[48] = 1;
   out_8779582774470017308[49] = 0;
   out_8779582774470017308[50] = 0;
   out_8779582774470017308[51] = 0;
   out_8779582774470017308[52] = 0;
   out_8779582774470017308[53] = 0;
   out_8779582774470017308[54] = 0;
   out_8779582774470017308[55] = 0;
   out_8779582774470017308[56] = 0;
   out_8779582774470017308[57] = 0;
   out_8779582774470017308[58] = 0;
   out_8779582774470017308[59] = 0;
   out_8779582774470017308[60] = 0;
   out_8779582774470017308[61] = 0;
   out_8779582774470017308[62] = 0;
   out_8779582774470017308[63] = 0;
   out_8779582774470017308[64] = 0;
   out_8779582774470017308[65] = 0;
   out_8779582774470017308[66] = 0;
   out_8779582774470017308[67] = 0;
   out_8779582774470017308[68] = 0;
}
void h_31(double *state, double *unused, double *out_1879484515421114513) {
   out_1879484515421114513[0] = state[7];
   out_1879484515421114513[1] = state[8];
   out_1879484515421114513[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7056315166629069001) {
   out_7056315166629069001[0] = 0;
   out_7056315166629069001[1] = 0;
   out_7056315166629069001[2] = 0;
   out_7056315166629069001[3] = 0;
   out_7056315166629069001[4] = 0;
   out_7056315166629069001[5] = 0;
   out_7056315166629069001[6] = 0;
   out_7056315166629069001[7] = 1;
   out_7056315166629069001[8] = 0;
   out_7056315166629069001[9] = 0;
   out_7056315166629069001[10] = 0;
   out_7056315166629069001[11] = 0;
   out_7056315166629069001[12] = 0;
   out_7056315166629069001[13] = 0;
   out_7056315166629069001[14] = 0;
   out_7056315166629069001[15] = 0;
   out_7056315166629069001[16] = 0;
   out_7056315166629069001[17] = 0;
   out_7056315166629069001[18] = 0;
   out_7056315166629069001[19] = 0;
   out_7056315166629069001[20] = 0;
   out_7056315166629069001[21] = 0;
   out_7056315166629069001[22] = 0;
   out_7056315166629069001[23] = 0;
   out_7056315166629069001[24] = 0;
   out_7056315166629069001[25] = 0;
   out_7056315166629069001[26] = 0;
   out_7056315166629069001[27] = 0;
   out_7056315166629069001[28] = 0;
   out_7056315166629069001[29] = 0;
   out_7056315166629069001[30] = 0;
   out_7056315166629069001[31] = 1;
   out_7056315166629069001[32] = 0;
   out_7056315166629069001[33] = 0;
   out_7056315166629069001[34] = 0;
   out_7056315166629069001[35] = 0;
   out_7056315166629069001[36] = 0;
   out_7056315166629069001[37] = 0;
   out_7056315166629069001[38] = 0;
   out_7056315166629069001[39] = 0;
   out_7056315166629069001[40] = 0;
   out_7056315166629069001[41] = 0;
   out_7056315166629069001[42] = 0;
   out_7056315166629069001[43] = 0;
   out_7056315166629069001[44] = 0;
   out_7056315166629069001[45] = 0;
   out_7056315166629069001[46] = 0;
   out_7056315166629069001[47] = 0;
   out_7056315166629069001[48] = 0;
   out_7056315166629069001[49] = 0;
   out_7056315166629069001[50] = 0;
   out_7056315166629069001[51] = 0;
   out_7056315166629069001[52] = 0;
   out_7056315166629069001[53] = 0;
   out_7056315166629069001[54] = 0;
   out_7056315166629069001[55] = 1;
   out_7056315166629069001[56] = 0;
   out_7056315166629069001[57] = 0;
   out_7056315166629069001[58] = 0;
   out_7056315166629069001[59] = 0;
   out_7056315166629069001[60] = 0;
   out_7056315166629069001[61] = 0;
   out_7056315166629069001[62] = 0;
   out_7056315166629069001[63] = 0;
   out_7056315166629069001[64] = 0;
   out_7056315166629069001[65] = 0;
   out_7056315166629069001[66] = 0;
   out_7056315166629069001[67] = 0;
   out_7056315166629069001[68] = 0;
}
void h_32(double *state, double *unused, double *out_8825490026557837445) {
   out_8825490026557837445[0] = state[3];
   out_8825490026557837445[1] = state[4];
   out_8825490026557837445[2] = state[5];
   out_8825490026557837445[3] = state[6];
}
void H_32(double *state, double *unused, double *out_9006816888276820648) {
   out_9006816888276820648[0] = 0;
   out_9006816888276820648[1] = 0;
   out_9006816888276820648[2] = 0;
   out_9006816888276820648[3] = 1;
   out_9006816888276820648[4] = 0;
   out_9006816888276820648[5] = 0;
   out_9006816888276820648[6] = 0;
   out_9006816888276820648[7] = 0;
   out_9006816888276820648[8] = 0;
   out_9006816888276820648[9] = 0;
   out_9006816888276820648[10] = 0;
   out_9006816888276820648[11] = 0;
   out_9006816888276820648[12] = 0;
   out_9006816888276820648[13] = 0;
   out_9006816888276820648[14] = 0;
   out_9006816888276820648[15] = 0;
   out_9006816888276820648[16] = 0;
   out_9006816888276820648[17] = 0;
   out_9006816888276820648[18] = 0;
   out_9006816888276820648[19] = 0;
   out_9006816888276820648[20] = 0;
   out_9006816888276820648[21] = 0;
   out_9006816888276820648[22] = 0;
   out_9006816888276820648[23] = 0;
   out_9006816888276820648[24] = 0;
   out_9006816888276820648[25] = 0;
   out_9006816888276820648[26] = 0;
   out_9006816888276820648[27] = 1;
   out_9006816888276820648[28] = 0;
   out_9006816888276820648[29] = 0;
   out_9006816888276820648[30] = 0;
   out_9006816888276820648[31] = 0;
   out_9006816888276820648[32] = 0;
   out_9006816888276820648[33] = 0;
   out_9006816888276820648[34] = 0;
   out_9006816888276820648[35] = 0;
   out_9006816888276820648[36] = 0;
   out_9006816888276820648[37] = 0;
   out_9006816888276820648[38] = 0;
   out_9006816888276820648[39] = 0;
   out_9006816888276820648[40] = 0;
   out_9006816888276820648[41] = 0;
   out_9006816888276820648[42] = 0;
   out_9006816888276820648[43] = 0;
   out_9006816888276820648[44] = 0;
   out_9006816888276820648[45] = 0;
   out_9006816888276820648[46] = 0;
   out_9006816888276820648[47] = 0;
   out_9006816888276820648[48] = 0;
   out_9006816888276820648[49] = 0;
   out_9006816888276820648[50] = 0;
   out_9006816888276820648[51] = 1;
   out_9006816888276820648[52] = 0;
   out_9006816888276820648[53] = 0;
   out_9006816888276820648[54] = 0;
   out_9006816888276820648[55] = 0;
   out_9006816888276820648[56] = 0;
   out_9006816888276820648[57] = 0;
   out_9006816888276820648[58] = 0;
   out_9006816888276820648[59] = 0;
   out_9006816888276820648[60] = 0;
   out_9006816888276820648[61] = 0;
   out_9006816888276820648[62] = 0;
   out_9006816888276820648[63] = 0;
   out_9006816888276820648[64] = 0;
   out_9006816888276820648[65] = 0;
   out_9006816888276820648[66] = 0;
   out_9006816888276820648[67] = 0;
   out_9006816888276820648[68] = 0;
   out_9006816888276820648[69] = 0;
   out_9006816888276820648[70] = 0;
   out_9006816888276820648[71] = 0;
   out_9006816888276820648[72] = 0;
   out_9006816888276820648[73] = 0;
   out_9006816888276820648[74] = 0;
   out_9006816888276820648[75] = 1;
   out_9006816888276820648[76] = 0;
   out_9006816888276820648[77] = 0;
   out_9006816888276820648[78] = 0;
   out_9006816888276820648[79] = 0;
   out_9006816888276820648[80] = 0;
   out_9006816888276820648[81] = 0;
   out_9006816888276820648[82] = 0;
   out_9006816888276820648[83] = 0;
   out_9006816888276820648[84] = 0;
   out_9006816888276820648[85] = 0;
   out_9006816888276820648[86] = 0;
   out_9006816888276820648[87] = 0;
   out_9006816888276820648[88] = 0;
   out_9006816888276820648[89] = 0;
   out_9006816888276820648[90] = 0;
   out_9006816888276820648[91] = 0;
}
void h_13(double *state, double *unused, double *out_5489966362556065194) {
   out_5489966362556065194[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5489966362556065194[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5489966362556065194[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3763103836578933447) {
   out_3763103836578933447[0] = 0;
   out_3763103836578933447[1] = 0;
   out_3763103836578933447[2] = 0;
   out_3763103836578933447[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3763103836578933447[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3763103836578933447[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3763103836578933447[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3763103836578933447[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3763103836578933447[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3763103836578933447[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3763103836578933447[10] = 0;
   out_3763103836578933447[11] = 0;
   out_3763103836578933447[12] = 0;
   out_3763103836578933447[13] = 0;
   out_3763103836578933447[14] = 0;
   out_3763103836578933447[15] = 0;
   out_3763103836578933447[16] = 0;
   out_3763103836578933447[17] = 0;
   out_3763103836578933447[18] = 0;
   out_3763103836578933447[19] = 0;
   out_3763103836578933447[20] = 0;
   out_3763103836578933447[21] = 0;
   out_3763103836578933447[22] = 0;
   out_3763103836578933447[23] = 0;
   out_3763103836578933447[24] = 0;
   out_3763103836578933447[25] = 0;
   out_3763103836578933447[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3763103836578933447[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3763103836578933447[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3763103836578933447[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3763103836578933447[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3763103836578933447[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3763103836578933447[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3763103836578933447[33] = 0;
   out_3763103836578933447[34] = 0;
   out_3763103836578933447[35] = 0;
   out_3763103836578933447[36] = 0;
   out_3763103836578933447[37] = 0;
   out_3763103836578933447[38] = 0;
   out_3763103836578933447[39] = 0;
   out_3763103836578933447[40] = 0;
   out_3763103836578933447[41] = 0;
   out_3763103836578933447[42] = 0;
   out_3763103836578933447[43] = 0;
   out_3763103836578933447[44] = 0;
   out_3763103836578933447[45] = 0;
   out_3763103836578933447[46] = 0;
   out_3763103836578933447[47] = 0;
   out_3763103836578933447[48] = 0;
   out_3763103836578933447[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3763103836578933447[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3763103836578933447[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3763103836578933447[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3763103836578933447[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3763103836578933447[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3763103836578933447[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3763103836578933447[56] = 0;
   out_3763103836578933447[57] = 0;
   out_3763103836578933447[58] = 0;
   out_3763103836578933447[59] = 0;
   out_3763103836578933447[60] = 0;
   out_3763103836578933447[61] = 0;
   out_3763103836578933447[62] = 0;
   out_3763103836578933447[63] = 0;
   out_3763103836578933447[64] = 0;
   out_3763103836578933447[65] = 0;
   out_3763103836578933447[66] = 0;
   out_3763103836578933447[67] = 0;
   out_3763103836578933447[68] = 0;
}
void h_14(double *state, double *unused, double *out_149483631174059161) {
   out_149483631174059161[0] = state[10];
   out_149483631174059161[1] = state[11];
   out_149483631174059161[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2880753929280854046) {
   out_2880753929280854046[0] = 0;
   out_2880753929280854046[1] = 0;
   out_2880753929280854046[2] = 0;
   out_2880753929280854046[3] = 0;
   out_2880753929280854046[4] = 0;
   out_2880753929280854046[5] = 0;
   out_2880753929280854046[6] = 0;
   out_2880753929280854046[7] = 0;
   out_2880753929280854046[8] = 0;
   out_2880753929280854046[9] = 0;
   out_2880753929280854046[10] = 1;
   out_2880753929280854046[11] = 0;
   out_2880753929280854046[12] = 0;
   out_2880753929280854046[13] = 0;
   out_2880753929280854046[14] = 0;
   out_2880753929280854046[15] = 0;
   out_2880753929280854046[16] = 0;
   out_2880753929280854046[17] = 0;
   out_2880753929280854046[18] = 0;
   out_2880753929280854046[19] = 0;
   out_2880753929280854046[20] = 0;
   out_2880753929280854046[21] = 0;
   out_2880753929280854046[22] = 0;
   out_2880753929280854046[23] = 0;
   out_2880753929280854046[24] = 0;
   out_2880753929280854046[25] = 0;
   out_2880753929280854046[26] = 0;
   out_2880753929280854046[27] = 0;
   out_2880753929280854046[28] = 0;
   out_2880753929280854046[29] = 0;
   out_2880753929280854046[30] = 0;
   out_2880753929280854046[31] = 0;
   out_2880753929280854046[32] = 0;
   out_2880753929280854046[33] = 0;
   out_2880753929280854046[34] = 1;
   out_2880753929280854046[35] = 0;
   out_2880753929280854046[36] = 0;
   out_2880753929280854046[37] = 0;
   out_2880753929280854046[38] = 0;
   out_2880753929280854046[39] = 0;
   out_2880753929280854046[40] = 0;
   out_2880753929280854046[41] = 0;
   out_2880753929280854046[42] = 0;
   out_2880753929280854046[43] = 0;
   out_2880753929280854046[44] = 0;
   out_2880753929280854046[45] = 0;
   out_2880753929280854046[46] = 0;
   out_2880753929280854046[47] = 0;
   out_2880753929280854046[48] = 0;
   out_2880753929280854046[49] = 0;
   out_2880753929280854046[50] = 0;
   out_2880753929280854046[51] = 0;
   out_2880753929280854046[52] = 0;
   out_2880753929280854046[53] = 0;
   out_2880753929280854046[54] = 0;
   out_2880753929280854046[55] = 0;
   out_2880753929280854046[56] = 0;
   out_2880753929280854046[57] = 0;
   out_2880753929280854046[58] = 1;
   out_2880753929280854046[59] = 0;
   out_2880753929280854046[60] = 0;
   out_2880753929280854046[61] = 0;
   out_2880753929280854046[62] = 0;
   out_2880753929280854046[63] = 0;
   out_2880753929280854046[64] = 0;
   out_2880753929280854046[65] = 0;
   out_2880753929280854046[66] = 0;
   out_2880753929280854046[67] = 0;
   out_2880753929280854046[68] = 0;
}
void h_19(double *state, double *unused, double *out_5895963450060674577) {
   out_5895963450060674577[0] = state[20];
   out_5895963450060674577[1] = state[21];
   out_5895963450060674577[2] = state[22];
}
void H_19(double *state, double *unused, double *out_7313433780383285227) {
   out_7313433780383285227[0] = 0;
   out_7313433780383285227[1] = 0;
   out_7313433780383285227[2] = 0;
   out_7313433780383285227[3] = 0;
   out_7313433780383285227[4] = 0;
   out_7313433780383285227[5] = 0;
   out_7313433780383285227[6] = 0;
   out_7313433780383285227[7] = 0;
   out_7313433780383285227[8] = 0;
   out_7313433780383285227[9] = 0;
   out_7313433780383285227[10] = 0;
   out_7313433780383285227[11] = 0;
   out_7313433780383285227[12] = 0;
   out_7313433780383285227[13] = 0;
   out_7313433780383285227[14] = 0;
   out_7313433780383285227[15] = 0;
   out_7313433780383285227[16] = 0;
   out_7313433780383285227[17] = 0;
   out_7313433780383285227[18] = 0;
   out_7313433780383285227[19] = 0;
   out_7313433780383285227[20] = 1;
   out_7313433780383285227[21] = 0;
   out_7313433780383285227[22] = 0;
   out_7313433780383285227[23] = 0;
   out_7313433780383285227[24] = 0;
   out_7313433780383285227[25] = 0;
   out_7313433780383285227[26] = 0;
   out_7313433780383285227[27] = 0;
   out_7313433780383285227[28] = 0;
   out_7313433780383285227[29] = 0;
   out_7313433780383285227[30] = 0;
   out_7313433780383285227[31] = 0;
   out_7313433780383285227[32] = 0;
   out_7313433780383285227[33] = 0;
   out_7313433780383285227[34] = 0;
   out_7313433780383285227[35] = 0;
   out_7313433780383285227[36] = 0;
   out_7313433780383285227[37] = 0;
   out_7313433780383285227[38] = 0;
   out_7313433780383285227[39] = 0;
   out_7313433780383285227[40] = 0;
   out_7313433780383285227[41] = 0;
   out_7313433780383285227[42] = 0;
   out_7313433780383285227[43] = 0;
   out_7313433780383285227[44] = 1;
   out_7313433780383285227[45] = 0;
   out_7313433780383285227[46] = 0;
   out_7313433780383285227[47] = 0;
   out_7313433780383285227[48] = 0;
   out_7313433780383285227[49] = 0;
   out_7313433780383285227[50] = 0;
   out_7313433780383285227[51] = 0;
   out_7313433780383285227[52] = 0;
   out_7313433780383285227[53] = 0;
   out_7313433780383285227[54] = 0;
   out_7313433780383285227[55] = 0;
   out_7313433780383285227[56] = 0;
   out_7313433780383285227[57] = 0;
   out_7313433780383285227[58] = 0;
   out_7313433780383285227[59] = 0;
   out_7313433780383285227[60] = 0;
   out_7313433780383285227[61] = 0;
   out_7313433780383285227[62] = 0;
   out_7313433780383285227[63] = 0;
   out_7313433780383285227[64] = 0;
   out_7313433780383285227[65] = 0;
   out_7313433780383285227[66] = 0;
   out_7313433780383285227[67] = 0;
   out_7313433780383285227[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_6440091693162022888) {
  H(in_vec, out_6440091693162022888);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4045068409998732168) {
  err_fun(nom_x, delta_x, out_4045068409998732168);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1130725816871523314) {
  inv_err_fun(nom_x, true_x, out_1130725816871523314);
}
void live_H_mod_fun(double *state, double *out_9057055102025961707) {
  H_mod_fun(state, out_9057055102025961707);
}
void live_f_fun(double *state, double dt, double *out_2924345871061403756) {
  f_fun(state,  dt, out_2924345871061403756);
}
void live_F_fun(double *state, double dt, double *out_1613889119122228654) {
  F_fun(state,  dt, out_1613889119122228654);
}
void live_h_3(double *state, double *unused, double *out_5439543506784062287) {
  h_3(state, unused, out_5439543506784062287);
}
void live_H_3(double *state, double *unused, double *out_3280548030947440156) {
  H_3(state, unused, out_3280548030947440156);
}
void live_h_4(double *state, double *unused, double *out_1525623624983305193) {
  h_4(state, unused, out_1525623624983305193);
}
void live_H_4(double *state, double *unused, double *out_7560605787500324739) {
  H_4(state, unused, out_7560605787500324739);
}
void live_h_9(double *state, double *unused, double *out_149483631174059161) {
  h_9(state, unused, out_149483631174059161);
}
void live_H_9(double *state, double *unused, double *out_2880753929280854046) {
  H_9(state, unused, out_2880753929280854046);
}
void live_h_10(double *state, double *unused, double *out_5544878077703004476) {
  h_10(state, unused, out_5544878077703004476);
}
void live_H_10(double *state, double *unused, double *out_1592384890266115533) {
  H_10(state, unused, out_1592384890266115533);
}
void live_h_12(double *state, double *unused, double *out_1573182497905511634) {
  h_12(state, unused, out_1573182497905511634);
}
void live_H_12(double *state, double *unused, double *out_8779582774470017308) {
  H_12(state, unused, out_8779582774470017308);
}
void live_h_31(double *state, double *unused, double *out_1879484515421114513) {
  h_31(state, unused, out_1879484515421114513);
}
void live_H_31(double *state, double *unused, double *out_7056315166629069001) {
  H_31(state, unused, out_7056315166629069001);
}
void live_h_32(double *state, double *unused, double *out_8825490026557837445) {
  h_32(state, unused, out_8825490026557837445);
}
void live_H_32(double *state, double *unused, double *out_9006816888276820648) {
  H_32(state, unused, out_9006816888276820648);
}
void live_h_13(double *state, double *unused, double *out_5489966362556065194) {
  h_13(state, unused, out_5489966362556065194);
}
void live_H_13(double *state, double *unused, double *out_3763103836578933447) {
  H_13(state, unused, out_3763103836578933447);
}
void live_h_14(double *state, double *unused, double *out_149483631174059161) {
  h_14(state, unused, out_149483631174059161);
}
void live_H_14(double *state, double *unused, double *out_2880753929280854046) {
  H_14(state, unused, out_2880753929280854046);
}
void live_h_19(double *state, double *unused, double *out_5895963450060674577) {
  h_19(state, unused, out_5895963450060674577);
}
void live_H_19(double *state, double *unused, double *out_7313433780383285227) {
  H_19(state, unused, out_7313433780383285227);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
