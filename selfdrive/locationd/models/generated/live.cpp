#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4028264744687795352) {
   out_4028264744687795352[0] = 0;
   out_4028264744687795352[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4028264744687795352[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4028264744687795352[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4028264744687795352[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4028264744687795352[5] = -sin(in_vec[1]);
   out_4028264744687795352[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4028264744687795352[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4028264744687795352[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4028264744687795352[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4028264744687795352[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4028264744687795352[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4028264744687795352[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4028264744687795352[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4028264744687795352[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4028264744687795352[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4028264744687795352[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4028264744687795352[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8435331516567488924) {
   out_8435331516567488924[0] = delta_x[0] + nom_x[0];
   out_8435331516567488924[1] = delta_x[1] + nom_x[1];
   out_8435331516567488924[2] = delta_x[2] + nom_x[2];
   out_8435331516567488924[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8435331516567488924[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8435331516567488924[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8435331516567488924[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8435331516567488924[7] = delta_x[6] + nom_x[7];
   out_8435331516567488924[8] = delta_x[7] + nom_x[8];
   out_8435331516567488924[9] = delta_x[8] + nom_x[9];
   out_8435331516567488924[10] = delta_x[9] + nom_x[10];
   out_8435331516567488924[11] = delta_x[10] + nom_x[11];
   out_8435331516567488924[12] = delta_x[11] + nom_x[12];
   out_8435331516567488924[13] = delta_x[12] + nom_x[13];
   out_8435331516567488924[14] = delta_x[13] + nom_x[14];
   out_8435331516567488924[15] = delta_x[14] + nom_x[15];
   out_8435331516567488924[16] = delta_x[15] + nom_x[16];
   out_8435331516567488924[17] = delta_x[16] + nom_x[17];
   out_8435331516567488924[18] = delta_x[17] + nom_x[18];
   out_8435331516567488924[19] = delta_x[18] + nom_x[19];
   out_8435331516567488924[20] = delta_x[19] + nom_x[20];
   out_8435331516567488924[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5002002164599025613) {
   out_5002002164599025613[0] = -nom_x[0] + true_x[0];
   out_5002002164599025613[1] = -nom_x[1] + true_x[1];
   out_5002002164599025613[2] = -nom_x[2] + true_x[2];
   out_5002002164599025613[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5002002164599025613[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5002002164599025613[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5002002164599025613[6] = -nom_x[7] + true_x[7];
   out_5002002164599025613[7] = -nom_x[8] + true_x[8];
   out_5002002164599025613[8] = -nom_x[9] + true_x[9];
   out_5002002164599025613[9] = -nom_x[10] + true_x[10];
   out_5002002164599025613[10] = -nom_x[11] + true_x[11];
   out_5002002164599025613[11] = -nom_x[12] + true_x[12];
   out_5002002164599025613[12] = -nom_x[13] + true_x[13];
   out_5002002164599025613[13] = -nom_x[14] + true_x[14];
   out_5002002164599025613[14] = -nom_x[15] + true_x[15];
   out_5002002164599025613[15] = -nom_x[16] + true_x[16];
   out_5002002164599025613[16] = -nom_x[17] + true_x[17];
   out_5002002164599025613[17] = -nom_x[18] + true_x[18];
   out_5002002164599025613[18] = -nom_x[19] + true_x[19];
   out_5002002164599025613[19] = -nom_x[20] + true_x[20];
   out_5002002164599025613[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3440322527295895629) {
   out_3440322527295895629[0] = 1.0;
   out_3440322527295895629[1] = 0;
   out_3440322527295895629[2] = 0;
   out_3440322527295895629[3] = 0;
   out_3440322527295895629[4] = 0;
   out_3440322527295895629[5] = 0;
   out_3440322527295895629[6] = 0;
   out_3440322527295895629[7] = 0;
   out_3440322527295895629[8] = 0;
   out_3440322527295895629[9] = 0;
   out_3440322527295895629[10] = 0;
   out_3440322527295895629[11] = 0;
   out_3440322527295895629[12] = 0;
   out_3440322527295895629[13] = 0;
   out_3440322527295895629[14] = 0;
   out_3440322527295895629[15] = 0;
   out_3440322527295895629[16] = 0;
   out_3440322527295895629[17] = 0;
   out_3440322527295895629[18] = 0;
   out_3440322527295895629[19] = 0;
   out_3440322527295895629[20] = 0;
   out_3440322527295895629[21] = 0;
   out_3440322527295895629[22] = 1.0;
   out_3440322527295895629[23] = 0;
   out_3440322527295895629[24] = 0;
   out_3440322527295895629[25] = 0;
   out_3440322527295895629[26] = 0;
   out_3440322527295895629[27] = 0;
   out_3440322527295895629[28] = 0;
   out_3440322527295895629[29] = 0;
   out_3440322527295895629[30] = 0;
   out_3440322527295895629[31] = 0;
   out_3440322527295895629[32] = 0;
   out_3440322527295895629[33] = 0;
   out_3440322527295895629[34] = 0;
   out_3440322527295895629[35] = 0;
   out_3440322527295895629[36] = 0;
   out_3440322527295895629[37] = 0;
   out_3440322527295895629[38] = 0;
   out_3440322527295895629[39] = 0;
   out_3440322527295895629[40] = 0;
   out_3440322527295895629[41] = 0;
   out_3440322527295895629[42] = 0;
   out_3440322527295895629[43] = 0;
   out_3440322527295895629[44] = 1.0;
   out_3440322527295895629[45] = 0;
   out_3440322527295895629[46] = 0;
   out_3440322527295895629[47] = 0;
   out_3440322527295895629[48] = 0;
   out_3440322527295895629[49] = 0;
   out_3440322527295895629[50] = 0;
   out_3440322527295895629[51] = 0;
   out_3440322527295895629[52] = 0;
   out_3440322527295895629[53] = 0;
   out_3440322527295895629[54] = 0;
   out_3440322527295895629[55] = 0;
   out_3440322527295895629[56] = 0;
   out_3440322527295895629[57] = 0;
   out_3440322527295895629[58] = 0;
   out_3440322527295895629[59] = 0;
   out_3440322527295895629[60] = 0;
   out_3440322527295895629[61] = 0;
   out_3440322527295895629[62] = 0;
   out_3440322527295895629[63] = 0;
   out_3440322527295895629[64] = 0;
   out_3440322527295895629[65] = 0;
   out_3440322527295895629[66] = -0.5*state[4];
   out_3440322527295895629[67] = -0.5*state[5];
   out_3440322527295895629[68] = -0.5*state[6];
   out_3440322527295895629[69] = 0;
   out_3440322527295895629[70] = 0;
   out_3440322527295895629[71] = 0;
   out_3440322527295895629[72] = 0;
   out_3440322527295895629[73] = 0;
   out_3440322527295895629[74] = 0;
   out_3440322527295895629[75] = 0;
   out_3440322527295895629[76] = 0;
   out_3440322527295895629[77] = 0;
   out_3440322527295895629[78] = 0;
   out_3440322527295895629[79] = 0;
   out_3440322527295895629[80] = 0;
   out_3440322527295895629[81] = 0;
   out_3440322527295895629[82] = 0;
   out_3440322527295895629[83] = 0;
   out_3440322527295895629[84] = 0;
   out_3440322527295895629[85] = 0;
   out_3440322527295895629[86] = 0;
   out_3440322527295895629[87] = 0.5*state[3];
   out_3440322527295895629[88] = 0.5*state[6];
   out_3440322527295895629[89] = -0.5*state[5];
   out_3440322527295895629[90] = 0;
   out_3440322527295895629[91] = 0;
   out_3440322527295895629[92] = 0;
   out_3440322527295895629[93] = 0;
   out_3440322527295895629[94] = 0;
   out_3440322527295895629[95] = 0;
   out_3440322527295895629[96] = 0;
   out_3440322527295895629[97] = 0;
   out_3440322527295895629[98] = 0;
   out_3440322527295895629[99] = 0;
   out_3440322527295895629[100] = 0;
   out_3440322527295895629[101] = 0;
   out_3440322527295895629[102] = 0;
   out_3440322527295895629[103] = 0;
   out_3440322527295895629[104] = 0;
   out_3440322527295895629[105] = 0;
   out_3440322527295895629[106] = 0;
   out_3440322527295895629[107] = 0;
   out_3440322527295895629[108] = -0.5*state[6];
   out_3440322527295895629[109] = 0.5*state[3];
   out_3440322527295895629[110] = 0.5*state[4];
   out_3440322527295895629[111] = 0;
   out_3440322527295895629[112] = 0;
   out_3440322527295895629[113] = 0;
   out_3440322527295895629[114] = 0;
   out_3440322527295895629[115] = 0;
   out_3440322527295895629[116] = 0;
   out_3440322527295895629[117] = 0;
   out_3440322527295895629[118] = 0;
   out_3440322527295895629[119] = 0;
   out_3440322527295895629[120] = 0;
   out_3440322527295895629[121] = 0;
   out_3440322527295895629[122] = 0;
   out_3440322527295895629[123] = 0;
   out_3440322527295895629[124] = 0;
   out_3440322527295895629[125] = 0;
   out_3440322527295895629[126] = 0;
   out_3440322527295895629[127] = 0;
   out_3440322527295895629[128] = 0;
   out_3440322527295895629[129] = 0.5*state[5];
   out_3440322527295895629[130] = -0.5*state[4];
   out_3440322527295895629[131] = 0.5*state[3];
   out_3440322527295895629[132] = 0;
   out_3440322527295895629[133] = 0;
   out_3440322527295895629[134] = 0;
   out_3440322527295895629[135] = 0;
   out_3440322527295895629[136] = 0;
   out_3440322527295895629[137] = 0;
   out_3440322527295895629[138] = 0;
   out_3440322527295895629[139] = 0;
   out_3440322527295895629[140] = 0;
   out_3440322527295895629[141] = 0;
   out_3440322527295895629[142] = 0;
   out_3440322527295895629[143] = 0;
   out_3440322527295895629[144] = 0;
   out_3440322527295895629[145] = 0;
   out_3440322527295895629[146] = 0;
   out_3440322527295895629[147] = 0;
   out_3440322527295895629[148] = 0;
   out_3440322527295895629[149] = 0;
   out_3440322527295895629[150] = 0;
   out_3440322527295895629[151] = 0;
   out_3440322527295895629[152] = 0;
   out_3440322527295895629[153] = 1.0;
   out_3440322527295895629[154] = 0;
   out_3440322527295895629[155] = 0;
   out_3440322527295895629[156] = 0;
   out_3440322527295895629[157] = 0;
   out_3440322527295895629[158] = 0;
   out_3440322527295895629[159] = 0;
   out_3440322527295895629[160] = 0;
   out_3440322527295895629[161] = 0;
   out_3440322527295895629[162] = 0;
   out_3440322527295895629[163] = 0;
   out_3440322527295895629[164] = 0;
   out_3440322527295895629[165] = 0;
   out_3440322527295895629[166] = 0;
   out_3440322527295895629[167] = 0;
   out_3440322527295895629[168] = 0;
   out_3440322527295895629[169] = 0;
   out_3440322527295895629[170] = 0;
   out_3440322527295895629[171] = 0;
   out_3440322527295895629[172] = 0;
   out_3440322527295895629[173] = 0;
   out_3440322527295895629[174] = 0;
   out_3440322527295895629[175] = 1.0;
   out_3440322527295895629[176] = 0;
   out_3440322527295895629[177] = 0;
   out_3440322527295895629[178] = 0;
   out_3440322527295895629[179] = 0;
   out_3440322527295895629[180] = 0;
   out_3440322527295895629[181] = 0;
   out_3440322527295895629[182] = 0;
   out_3440322527295895629[183] = 0;
   out_3440322527295895629[184] = 0;
   out_3440322527295895629[185] = 0;
   out_3440322527295895629[186] = 0;
   out_3440322527295895629[187] = 0;
   out_3440322527295895629[188] = 0;
   out_3440322527295895629[189] = 0;
   out_3440322527295895629[190] = 0;
   out_3440322527295895629[191] = 0;
   out_3440322527295895629[192] = 0;
   out_3440322527295895629[193] = 0;
   out_3440322527295895629[194] = 0;
   out_3440322527295895629[195] = 0;
   out_3440322527295895629[196] = 0;
   out_3440322527295895629[197] = 1.0;
   out_3440322527295895629[198] = 0;
   out_3440322527295895629[199] = 0;
   out_3440322527295895629[200] = 0;
   out_3440322527295895629[201] = 0;
   out_3440322527295895629[202] = 0;
   out_3440322527295895629[203] = 0;
   out_3440322527295895629[204] = 0;
   out_3440322527295895629[205] = 0;
   out_3440322527295895629[206] = 0;
   out_3440322527295895629[207] = 0;
   out_3440322527295895629[208] = 0;
   out_3440322527295895629[209] = 0;
   out_3440322527295895629[210] = 0;
   out_3440322527295895629[211] = 0;
   out_3440322527295895629[212] = 0;
   out_3440322527295895629[213] = 0;
   out_3440322527295895629[214] = 0;
   out_3440322527295895629[215] = 0;
   out_3440322527295895629[216] = 0;
   out_3440322527295895629[217] = 0;
   out_3440322527295895629[218] = 0;
   out_3440322527295895629[219] = 1.0;
   out_3440322527295895629[220] = 0;
   out_3440322527295895629[221] = 0;
   out_3440322527295895629[222] = 0;
   out_3440322527295895629[223] = 0;
   out_3440322527295895629[224] = 0;
   out_3440322527295895629[225] = 0;
   out_3440322527295895629[226] = 0;
   out_3440322527295895629[227] = 0;
   out_3440322527295895629[228] = 0;
   out_3440322527295895629[229] = 0;
   out_3440322527295895629[230] = 0;
   out_3440322527295895629[231] = 0;
   out_3440322527295895629[232] = 0;
   out_3440322527295895629[233] = 0;
   out_3440322527295895629[234] = 0;
   out_3440322527295895629[235] = 0;
   out_3440322527295895629[236] = 0;
   out_3440322527295895629[237] = 0;
   out_3440322527295895629[238] = 0;
   out_3440322527295895629[239] = 0;
   out_3440322527295895629[240] = 0;
   out_3440322527295895629[241] = 1.0;
   out_3440322527295895629[242] = 0;
   out_3440322527295895629[243] = 0;
   out_3440322527295895629[244] = 0;
   out_3440322527295895629[245] = 0;
   out_3440322527295895629[246] = 0;
   out_3440322527295895629[247] = 0;
   out_3440322527295895629[248] = 0;
   out_3440322527295895629[249] = 0;
   out_3440322527295895629[250] = 0;
   out_3440322527295895629[251] = 0;
   out_3440322527295895629[252] = 0;
   out_3440322527295895629[253] = 0;
   out_3440322527295895629[254] = 0;
   out_3440322527295895629[255] = 0;
   out_3440322527295895629[256] = 0;
   out_3440322527295895629[257] = 0;
   out_3440322527295895629[258] = 0;
   out_3440322527295895629[259] = 0;
   out_3440322527295895629[260] = 0;
   out_3440322527295895629[261] = 0;
   out_3440322527295895629[262] = 0;
   out_3440322527295895629[263] = 1.0;
   out_3440322527295895629[264] = 0;
   out_3440322527295895629[265] = 0;
   out_3440322527295895629[266] = 0;
   out_3440322527295895629[267] = 0;
   out_3440322527295895629[268] = 0;
   out_3440322527295895629[269] = 0;
   out_3440322527295895629[270] = 0;
   out_3440322527295895629[271] = 0;
   out_3440322527295895629[272] = 0;
   out_3440322527295895629[273] = 0;
   out_3440322527295895629[274] = 0;
   out_3440322527295895629[275] = 0;
   out_3440322527295895629[276] = 0;
   out_3440322527295895629[277] = 0;
   out_3440322527295895629[278] = 0;
   out_3440322527295895629[279] = 0;
   out_3440322527295895629[280] = 0;
   out_3440322527295895629[281] = 0;
   out_3440322527295895629[282] = 0;
   out_3440322527295895629[283] = 0;
   out_3440322527295895629[284] = 0;
   out_3440322527295895629[285] = 1.0;
   out_3440322527295895629[286] = 0;
   out_3440322527295895629[287] = 0;
   out_3440322527295895629[288] = 0;
   out_3440322527295895629[289] = 0;
   out_3440322527295895629[290] = 0;
   out_3440322527295895629[291] = 0;
   out_3440322527295895629[292] = 0;
   out_3440322527295895629[293] = 0;
   out_3440322527295895629[294] = 0;
   out_3440322527295895629[295] = 0;
   out_3440322527295895629[296] = 0;
   out_3440322527295895629[297] = 0;
   out_3440322527295895629[298] = 0;
   out_3440322527295895629[299] = 0;
   out_3440322527295895629[300] = 0;
   out_3440322527295895629[301] = 0;
   out_3440322527295895629[302] = 0;
   out_3440322527295895629[303] = 0;
   out_3440322527295895629[304] = 0;
   out_3440322527295895629[305] = 0;
   out_3440322527295895629[306] = 0;
   out_3440322527295895629[307] = 1.0;
   out_3440322527295895629[308] = 0;
   out_3440322527295895629[309] = 0;
   out_3440322527295895629[310] = 0;
   out_3440322527295895629[311] = 0;
   out_3440322527295895629[312] = 0;
   out_3440322527295895629[313] = 0;
   out_3440322527295895629[314] = 0;
   out_3440322527295895629[315] = 0;
   out_3440322527295895629[316] = 0;
   out_3440322527295895629[317] = 0;
   out_3440322527295895629[318] = 0;
   out_3440322527295895629[319] = 0;
   out_3440322527295895629[320] = 0;
   out_3440322527295895629[321] = 0;
   out_3440322527295895629[322] = 0;
   out_3440322527295895629[323] = 0;
   out_3440322527295895629[324] = 0;
   out_3440322527295895629[325] = 0;
   out_3440322527295895629[326] = 0;
   out_3440322527295895629[327] = 0;
   out_3440322527295895629[328] = 0;
   out_3440322527295895629[329] = 1.0;
   out_3440322527295895629[330] = 0;
   out_3440322527295895629[331] = 0;
   out_3440322527295895629[332] = 0;
   out_3440322527295895629[333] = 0;
   out_3440322527295895629[334] = 0;
   out_3440322527295895629[335] = 0;
   out_3440322527295895629[336] = 0;
   out_3440322527295895629[337] = 0;
   out_3440322527295895629[338] = 0;
   out_3440322527295895629[339] = 0;
   out_3440322527295895629[340] = 0;
   out_3440322527295895629[341] = 0;
   out_3440322527295895629[342] = 0;
   out_3440322527295895629[343] = 0;
   out_3440322527295895629[344] = 0;
   out_3440322527295895629[345] = 0;
   out_3440322527295895629[346] = 0;
   out_3440322527295895629[347] = 0;
   out_3440322527295895629[348] = 0;
   out_3440322527295895629[349] = 0;
   out_3440322527295895629[350] = 0;
   out_3440322527295895629[351] = 1.0;
   out_3440322527295895629[352] = 0;
   out_3440322527295895629[353] = 0;
   out_3440322527295895629[354] = 0;
   out_3440322527295895629[355] = 0;
   out_3440322527295895629[356] = 0;
   out_3440322527295895629[357] = 0;
   out_3440322527295895629[358] = 0;
   out_3440322527295895629[359] = 0;
   out_3440322527295895629[360] = 0;
   out_3440322527295895629[361] = 0;
   out_3440322527295895629[362] = 0;
   out_3440322527295895629[363] = 0;
   out_3440322527295895629[364] = 0;
   out_3440322527295895629[365] = 0;
   out_3440322527295895629[366] = 0;
   out_3440322527295895629[367] = 0;
   out_3440322527295895629[368] = 0;
   out_3440322527295895629[369] = 0;
   out_3440322527295895629[370] = 0;
   out_3440322527295895629[371] = 0;
   out_3440322527295895629[372] = 0;
   out_3440322527295895629[373] = 1.0;
   out_3440322527295895629[374] = 0;
   out_3440322527295895629[375] = 0;
   out_3440322527295895629[376] = 0;
   out_3440322527295895629[377] = 0;
   out_3440322527295895629[378] = 0;
   out_3440322527295895629[379] = 0;
   out_3440322527295895629[380] = 0;
   out_3440322527295895629[381] = 0;
   out_3440322527295895629[382] = 0;
   out_3440322527295895629[383] = 0;
   out_3440322527295895629[384] = 0;
   out_3440322527295895629[385] = 0;
   out_3440322527295895629[386] = 0;
   out_3440322527295895629[387] = 0;
   out_3440322527295895629[388] = 0;
   out_3440322527295895629[389] = 0;
   out_3440322527295895629[390] = 0;
   out_3440322527295895629[391] = 0;
   out_3440322527295895629[392] = 0;
   out_3440322527295895629[393] = 0;
   out_3440322527295895629[394] = 0;
   out_3440322527295895629[395] = 1.0;
   out_3440322527295895629[396] = 0;
   out_3440322527295895629[397] = 0;
   out_3440322527295895629[398] = 0;
   out_3440322527295895629[399] = 0;
   out_3440322527295895629[400] = 0;
   out_3440322527295895629[401] = 0;
   out_3440322527295895629[402] = 0;
   out_3440322527295895629[403] = 0;
   out_3440322527295895629[404] = 0;
   out_3440322527295895629[405] = 0;
   out_3440322527295895629[406] = 0;
   out_3440322527295895629[407] = 0;
   out_3440322527295895629[408] = 0;
   out_3440322527295895629[409] = 0;
   out_3440322527295895629[410] = 0;
   out_3440322527295895629[411] = 0;
   out_3440322527295895629[412] = 0;
   out_3440322527295895629[413] = 0;
   out_3440322527295895629[414] = 0;
   out_3440322527295895629[415] = 0;
   out_3440322527295895629[416] = 0;
   out_3440322527295895629[417] = 1.0;
   out_3440322527295895629[418] = 0;
   out_3440322527295895629[419] = 0;
   out_3440322527295895629[420] = 0;
   out_3440322527295895629[421] = 0;
   out_3440322527295895629[422] = 0;
   out_3440322527295895629[423] = 0;
   out_3440322527295895629[424] = 0;
   out_3440322527295895629[425] = 0;
   out_3440322527295895629[426] = 0;
   out_3440322527295895629[427] = 0;
   out_3440322527295895629[428] = 0;
   out_3440322527295895629[429] = 0;
   out_3440322527295895629[430] = 0;
   out_3440322527295895629[431] = 0;
   out_3440322527295895629[432] = 0;
   out_3440322527295895629[433] = 0;
   out_3440322527295895629[434] = 0;
   out_3440322527295895629[435] = 0;
   out_3440322527295895629[436] = 0;
   out_3440322527295895629[437] = 0;
   out_3440322527295895629[438] = 0;
   out_3440322527295895629[439] = 1.0;
   out_3440322527295895629[440] = 0;
   out_3440322527295895629[441] = 0;
   out_3440322527295895629[442] = 0;
   out_3440322527295895629[443] = 0;
   out_3440322527295895629[444] = 0;
   out_3440322527295895629[445] = 0;
   out_3440322527295895629[446] = 0;
   out_3440322527295895629[447] = 0;
   out_3440322527295895629[448] = 0;
   out_3440322527295895629[449] = 0;
   out_3440322527295895629[450] = 0;
   out_3440322527295895629[451] = 0;
   out_3440322527295895629[452] = 0;
   out_3440322527295895629[453] = 0;
   out_3440322527295895629[454] = 0;
   out_3440322527295895629[455] = 0;
   out_3440322527295895629[456] = 0;
   out_3440322527295895629[457] = 0;
   out_3440322527295895629[458] = 0;
   out_3440322527295895629[459] = 0;
   out_3440322527295895629[460] = 0;
   out_3440322527295895629[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6600220164658986461) {
   out_6600220164658986461[0] = dt*state[7] + state[0];
   out_6600220164658986461[1] = dt*state[8] + state[1];
   out_6600220164658986461[2] = dt*state[9] + state[2];
   out_6600220164658986461[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6600220164658986461[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6600220164658986461[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6600220164658986461[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6600220164658986461[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6600220164658986461[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6600220164658986461[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6600220164658986461[10] = state[10];
   out_6600220164658986461[11] = state[11];
   out_6600220164658986461[12] = state[12];
   out_6600220164658986461[13] = state[13];
   out_6600220164658986461[14] = state[14];
   out_6600220164658986461[15] = state[15];
   out_6600220164658986461[16] = state[16];
   out_6600220164658986461[17] = state[17];
   out_6600220164658986461[18] = state[18];
   out_6600220164658986461[19] = state[19];
   out_6600220164658986461[20] = state[20];
   out_6600220164658986461[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6389863516536335469) {
   out_6389863516536335469[0] = 1;
   out_6389863516536335469[1] = 0;
   out_6389863516536335469[2] = 0;
   out_6389863516536335469[3] = 0;
   out_6389863516536335469[4] = 0;
   out_6389863516536335469[5] = 0;
   out_6389863516536335469[6] = dt;
   out_6389863516536335469[7] = 0;
   out_6389863516536335469[8] = 0;
   out_6389863516536335469[9] = 0;
   out_6389863516536335469[10] = 0;
   out_6389863516536335469[11] = 0;
   out_6389863516536335469[12] = 0;
   out_6389863516536335469[13] = 0;
   out_6389863516536335469[14] = 0;
   out_6389863516536335469[15] = 0;
   out_6389863516536335469[16] = 0;
   out_6389863516536335469[17] = 0;
   out_6389863516536335469[18] = 0;
   out_6389863516536335469[19] = 0;
   out_6389863516536335469[20] = 0;
   out_6389863516536335469[21] = 0;
   out_6389863516536335469[22] = 1;
   out_6389863516536335469[23] = 0;
   out_6389863516536335469[24] = 0;
   out_6389863516536335469[25] = 0;
   out_6389863516536335469[26] = 0;
   out_6389863516536335469[27] = 0;
   out_6389863516536335469[28] = dt;
   out_6389863516536335469[29] = 0;
   out_6389863516536335469[30] = 0;
   out_6389863516536335469[31] = 0;
   out_6389863516536335469[32] = 0;
   out_6389863516536335469[33] = 0;
   out_6389863516536335469[34] = 0;
   out_6389863516536335469[35] = 0;
   out_6389863516536335469[36] = 0;
   out_6389863516536335469[37] = 0;
   out_6389863516536335469[38] = 0;
   out_6389863516536335469[39] = 0;
   out_6389863516536335469[40] = 0;
   out_6389863516536335469[41] = 0;
   out_6389863516536335469[42] = 0;
   out_6389863516536335469[43] = 0;
   out_6389863516536335469[44] = 1;
   out_6389863516536335469[45] = 0;
   out_6389863516536335469[46] = 0;
   out_6389863516536335469[47] = 0;
   out_6389863516536335469[48] = 0;
   out_6389863516536335469[49] = 0;
   out_6389863516536335469[50] = dt;
   out_6389863516536335469[51] = 0;
   out_6389863516536335469[52] = 0;
   out_6389863516536335469[53] = 0;
   out_6389863516536335469[54] = 0;
   out_6389863516536335469[55] = 0;
   out_6389863516536335469[56] = 0;
   out_6389863516536335469[57] = 0;
   out_6389863516536335469[58] = 0;
   out_6389863516536335469[59] = 0;
   out_6389863516536335469[60] = 0;
   out_6389863516536335469[61] = 0;
   out_6389863516536335469[62] = 0;
   out_6389863516536335469[63] = 0;
   out_6389863516536335469[64] = 0;
   out_6389863516536335469[65] = 0;
   out_6389863516536335469[66] = 1;
   out_6389863516536335469[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6389863516536335469[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6389863516536335469[69] = 0;
   out_6389863516536335469[70] = 0;
   out_6389863516536335469[71] = 0;
   out_6389863516536335469[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6389863516536335469[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6389863516536335469[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6389863516536335469[75] = 0;
   out_6389863516536335469[76] = 0;
   out_6389863516536335469[77] = 0;
   out_6389863516536335469[78] = 0;
   out_6389863516536335469[79] = 0;
   out_6389863516536335469[80] = 0;
   out_6389863516536335469[81] = 0;
   out_6389863516536335469[82] = 0;
   out_6389863516536335469[83] = 0;
   out_6389863516536335469[84] = 0;
   out_6389863516536335469[85] = 0;
   out_6389863516536335469[86] = 0;
   out_6389863516536335469[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6389863516536335469[88] = 1;
   out_6389863516536335469[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6389863516536335469[90] = 0;
   out_6389863516536335469[91] = 0;
   out_6389863516536335469[92] = 0;
   out_6389863516536335469[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6389863516536335469[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6389863516536335469[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6389863516536335469[96] = 0;
   out_6389863516536335469[97] = 0;
   out_6389863516536335469[98] = 0;
   out_6389863516536335469[99] = 0;
   out_6389863516536335469[100] = 0;
   out_6389863516536335469[101] = 0;
   out_6389863516536335469[102] = 0;
   out_6389863516536335469[103] = 0;
   out_6389863516536335469[104] = 0;
   out_6389863516536335469[105] = 0;
   out_6389863516536335469[106] = 0;
   out_6389863516536335469[107] = 0;
   out_6389863516536335469[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6389863516536335469[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6389863516536335469[110] = 1;
   out_6389863516536335469[111] = 0;
   out_6389863516536335469[112] = 0;
   out_6389863516536335469[113] = 0;
   out_6389863516536335469[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6389863516536335469[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6389863516536335469[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6389863516536335469[117] = 0;
   out_6389863516536335469[118] = 0;
   out_6389863516536335469[119] = 0;
   out_6389863516536335469[120] = 0;
   out_6389863516536335469[121] = 0;
   out_6389863516536335469[122] = 0;
   out_6389863516536335469[123] = 0;
   out_6389863516536335469[124] = 0;
   out_6389863516536335469[125] = 0;
   out_6389863516536335469[126] = 0;
   out_6389863516536335469[127] = 0;
   out_6389863516536335469[128] = 0;
   out_6389863516536335469[129] = 0;
   out_6389863516536335469[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6389863516536335469[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6389863516536335469[132] = 1;
   out_6389863516536335469[133] = 0;
   out_6389863516536335469[134] = 0;
   out_6389863516536335469[135] = 0;
   out_6389863516536335469[136] = 0;
   out_6389863516536335469[137] = 0;
   out_6389863516536335469[138] = 0;
   out_6389863516536335469[139] = 0;
   out_6389863516536335469[140] = 0;
   out_6389863516536335469[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6389863516536335469[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6389863516536335469[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6389863516536335469[144] = 0;
   out_6389863516536335469[145] = 0;
   out_6389863516536335469[146] = 0;
   out_6389863516536335469[147] = 0;
   out_6389863516536335469[148] = 0;
   out_6389863516536335469[149] = 0;
   out_6389863516536335469[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6389863516536335469[151] = 0;
   out_6389863516536335469[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6389863516536335469[153] = 0;
   out_6389863516536335469[154] = 1;
   out_6389863516536335469[155] = 0;
   out_6389863516536335469[156] = 0;
   out_6389863516536335469[157] = 0;
   out_6389863516536335469[158] = 0;
   out_6389863516536335469[159] = 0;
   out_6389863516536335469[160] = 0;
   out_6389863516536335469[161] = 0;
   out_6389863516536335469[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6389863516536335469[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6389863516536335469[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6389863516536335469[165] = 0;
   out_6389863516536335469[166] = 0;
   out_6389863516536335469[167] = 0;
   out_6389863516536335469[168] = 0;
   out_6389863516536335469[169] = 0;
   out_6389863516536335469[170] = 0;
   out_6389863516536335469[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6389863516536335469[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6389863516536335469[173] = 0;
   out_6389863516536335469[174] = 0;
   out_6389863516536335469[175] = 0;
   out_6389863516536335469[176] = 1;
   out_6389863516536335469[177] = 0;
   out_6389863516536335469[178] = 0;
   out_6389863516536335469[179] = 0;
   out_6389863516536335469[180] = 0;
   out_6389863516536335469[181] = 0;
   out_6389863516536335469[182] = 0;
   out_6389863516536335469[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6389863516536335469[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6389863516536335469[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6389863516536335469[186] = 0;
   out_6389863516536335469[187] = 0;
   out_6389863516536335469[188] = 0;
   out_6389863516536335469[189] = 0;
   out_6389863516536335469[190] = 0;
   out_6389863516536335469[191] = 0;
   out_6389863516536335469[192] = 0;
   out_6389863516536335469[193] = 0;
   out_6389863516536335469[194] = 0;
   out_6389863516536335469[195] = 0;
   out_6389863516536335469[196] = 0;
   out_6389863516536335469[197] = 0;
   out_6389863516536335469[198] = 1;
   out_6389863516536335469[199] = 0;
   out_6389863516536335469[200] = 0;
   out_6389863516536335469[201] = 0;
   out_6389863516536335469[202] = 0;
   out_6389863516536335469[203] = 0;
   out_6389863516536335469[204] = 0;
   out_6389863516536335469[205] = 0;
   out_6389863516536335469[206] = 0;
   out_6389863516536335469[207] = 0;
   out_6389863516536335469[208] = 0;
   out_6389863516536335469[209] = 0;
   out_6389863516536335469[210] = 0;
   out_6389863516536335469[211] = 0;
   out_6389863516536335469[212] = 0;
   out_6389863516536335469[213] = 0;
   out_6389863516536335469[214] = 0;
   out_6389863516536335469[215] = 0;
   out_6389863516536335469[216] = 0;
   out_6389863516536335469[217] = 0;
   out_6389863516536335469[218] = 0;
   out_6389863516536335469[219] = 0;
   out_6389863516536335469[220] = 1;
   out_6389863516536335469[221] = 0;
   out_6389863516536335469[222] = 0;
   out_6389863516536335469[223] = 0;
   out_6389863516536335469[224] = 0;
   out_6389863516536335469[225] = 0;
   out_6389863516536335469[226] = 0;
   out_6389863516536335469[227] = 0;
   out_6389863516536335469[228] = 0;
   out_6389863516536335469[229] = 0;
   out_6389863516536335469[230] = 0;
   out_6389863516536335469[231] = 0;
   out_6389863516536335469[232] = 0;
   out_6389863516536335469[233] = 0;
   out_6389863516536335469[234] = 0;
   out_6389863516536335469[235] = 0;
   out_6389863516536335469[236] = 0;
   out_6389863516536335469[237] = 0;
   out_6389863516536335469[238] = 0;
   out_6389863516536335469[239] = 0;
   out_6389863516536335469[240] = 0;
   out_6389863516536335469[241] = 0;
   out_6389863516536335469[242] = 1;
   out_6389863516536335469[243] = 0;
   out_6389863516536335469[244] = 0;
   out_6389863516536335469[245] = 0;
   out_6389863516536335469[246] = 0;
   out_6389863516536335469[247] = 0;
   out_6389863516536335469[248] = 0;
   out_6389863516536335469[249] = 0;
   out_6389863516536335469[250] = 0;
   out_6389863516536335469[251] = 0;
   out_6389863516536335469[252] = 0;
   out_6389863516536335469[253] = 0;
   out_6389863516536335469[254] = 0;
   out_6389863516536335469[255] = 0;
   out_6389863516536335469[256] = 0;
   out_6389863516536335469[257] = 0;
   out_6389863516536335469[258] = 0;
   out_6389863516536335469[259] = 0;
   out_6389863516536335469[260] = 0;
   out_6389863516536335469[261] = 0;
   out_6389863516536335469[262] = 0;
   out_6389863516536335469[263] = 0;
   out_6389863516536335469[264] = 1;
   out_6389863516536335469[265] = 0;
   out_6389863516536335469[266] = 0;
   out_6389863516536335469[267] = 0;
   out_6389863516536335469[268] = 0;
   out_6389863516536335469[269] = 0;
   out_6389863516536335469[270] = 0;
   out_6389863516536335469[271] = 0;
   out_6389863516536335469[272] = 0;
   out_6389863516536335469[273] = 0;
   out_6389863516536335469[274] = 0;
   out_6389863516536335469[275] = 0;
   out_6389863516536335469[276] = 0;
   out_6389863516536335469[277] = 0;
   out_6389863516536335469[278] = 0;
   out_6389863516536335469[279] = 0;
   out_6389863516536335469[280] = 0;
   out_6389863516536335469[281] = 0;
   out_6389863516536335469[282] = 0;
   out_6389863516536335469[283] = 0;
   out_6389863516536335469[284] = 0;
   out_6389863516536335469[285] = 0;
   out_6389863516536335469[286] = 1;
   out_6389863516536335469[287] = 0;
   out_6389863516536335469[288] = 0;
   out_6389863516536335469[289] = 0;
   out_6389863516536335469[290] = 0;
   out_6389863516536335469[291] = 0;
   out_6389863516536335469[292] = 0;
   out_6389863516536335469[293] = 0;
   out_6389863516536335469[294] = 0;
   out_6389863516536335469[295] = 0;
   out_6389863516536335469[296] = 0;
   out_6389863516536335469[297] = 0;
   out_6389863516536335469[298] = 0;
   out_6389863516536335469[299] = 0;
   out_6389863516536335469[300] = 0;
   out_6389863516536335469[301] = 0;
   out_6389863516536335469[302] = 0;
   out_6389863516536335469[303] = 0;
   out_6389863516536335469[304] = 0;
   out_6389863516536335469[305] = 0;
   out_6389863516536335469[306] = 0;
   out_6389863516536335469[307] = 0;
   out_6389863516536335469[308] = 1;
   out_6389863516536335469[309] = 0;
   out_6389863516536335469[310] = 0;
   out_6389863516536335469[311] = 0;
   out_6389863516536335469[312] = 0;
   out_6389863516536335469[313] = 0;
   out_6389863516536335469[314] = 0;
   out_6389863516536335469[315] = 0;
   out_6389863516536335469[316] = 0;
   out_6389863516536335469[317] = 0;
   out_6389863516536335469[318] = 0;
   out_6389863516536335469[319] = 0;
   out_6389863516536335469[320] = 0;
   out_6389863516536335469[321] = 0;
   out_6389863516536335469[322] = 0;
   out_6389863516536335469[323] = 0;
   out_6389863516536335469[324] = 0;
   out_6389863516536335469[325] = 0;
   out_6389863516536335469[326] = 0;
   out_6389863516536335469[327] = 0;
   out_6389863516536335469[328] = 0;
   out_6389863516536335469[329] = 0;
   out_6389863516536335469[330] = 1;
   out_6389863516536335469[331] = 0;
   out_6389863516536335469[332] = 0;
   out_6389863516536335469[333] = 0;
   out_6389863516536335469[334] = 0;
   out_6389863516536335469[335] = 0;
   out_6389863516536335469[336] = 0;
   out_6389863516536335469[337] = 0;
   out_6389863516536335469[338] = 0;
   out_6389863516536335469[339] = 0;
   out_6389863516536335469[340] = 0;
   out_6389863516536335469[341] = 0;
   out_6389863516536335469[342] = 0;
   out_6389863516536335469[343] = 0;
   out_6389863516536335469[344] = 0;
   out_6389863516536335469[345] = 0;
   out_6389863516536335469[346] = 0;
   out_6389863516536335469[347] = 0;
   out_6389863516536335469[348] = 0;
   out_6389863516536335469[349] = 0;
   out_6389863516536335469[350] = 0;
   out_6389863516536335469[351] = 0;
   out_6389863516536335469[352] = 1;
   out_6389863516536335469[353] = 0;
   out_6389863516536335469[354] = 0;
   out_6389863516536335469[355] = 0;
   out_6389863516536335469[356] = 0;
   out_6389863516536335469[357] = 0;
   out_6389863516536335469[358] = 0;
   out_6389863516536335469[359] = 0;
   out_6389863516536335469[360] = 0;
   out_6389863516536335469[361] = 0;
   out_6389863516536335469[362] = 0;
   out_6389863516536335469[363] = 0;
   out_6389863516536335469[364] = 0;
   out_6389863516536335469[365] = 0;
   out_6389863516536335469[366] = 0;
   out_6389863516536335469[367] = 0;
   out_6389863516536335469[368] = 0;
   out_6389863516536335469[369] = 0;
   out_6389863516536335469[370] = 0;
   out_6389863516536335469[371] = 0;
   out_6389863516536335469[372] = 0;
   out_6389863516536335469[373] = 0;
   out_6389863516536335469[374] = 1;
   out_6389863516536335469[375] = 0;
   out_6389863516536335469[376] = 0;
   out_6389863516536335469[377] = 0;
   out_6389863516536335469[378] = 0;
   out_6389863516536335469[379] = 0;
   out_6389863516536335469[380] = 0;
   out_6389863516536335469[381] = 0;
   out_6389863516536335469[382] = 0;
   out_6389863516536335469[383] = 0;
   out_6389863516536335469[384] = 0;
   out_6389863516536335469[385] = 0;
   out_6389863516536335469[386] = 0;
   out_6389863516536335469[387] = 0;
   out_6389863516536335469[388] = 0;
   out_6389863516536335469[389] = 0;
   out_6389863516536335469[390] = 0;
   out_6389863516536335469[391] = 0;
   out_6389863516536335469[392] = 0;
   out_6389863516536335469[393] = 0;
   out_6389863516536335469[394] = 0;
   out_6389863516536335469[395] = 0;
   out_6389863516536335469[396] = 1;
   out_6389863516536335469[397] = 0;
   out_6389863516536335469[398] = 0;
   out_6389863516536335469[399] = 0;
   out_6389863516536335469[400] = 0;
   out_6389863516536335469[401] = 0;
   out_6389863516536335469[402] = 0;
   out_6389863516536335469[403] = 0;
   out_6389863516536335469[404] = 0;
   out_6389863516536335469[405] = 0;
   out_6389863516536335469[406] = 0;
   out_6389863516536335469[407] = 0;
   out_6389863516536335469[408] = 0;
   out_6389863516536335469[409] = 0;
   out_6389863516536335469[410] = 0;
   out_6389863516536335469[411] = 0;
   out_6389863516536335469[412] = 0;
   out_6389863516536335469[413] = 0;
   out_6389863516536335469[414] = 0;
   out_6389863516536335469[415] = 0;
   out_6389863516536335469[416] = 0;
   out_6389863516536335469[417] = 0;
   out_6389863516536335469[418] = 1;
   out_6389863516536335469[419] = 0;
   out_6389863516536335469[420] = 0;
   out_6389863516536335469[421] = 0;
   out_6389863516536335469[422] = 0;
   out_6389863516536335469[423] = 0;
   out_6389863516536335469[424] = 0;
   out_6389863516536335469[425] = 0;
   out_6389863516536335469[426] = 0;
   out_6389863516536335469[427] = 0;
   out_6389863516536335469[428] = 0;
   out_6389863516536335469[429] = 0;
   out_6389863516536335469[430] = 0;
   out_6389863516536335469[431] = 0;
   out_6389863516536335469[432] = 0;
   out_6389863516536335469[433] = 0;
   out_6389863516536335469[434] = 0;
   out_6389863516536335469[435] = 0;
   out_6389863516536335469[436] = 0;
   out_6389863516536335469[437] = 0;
   out_6389863516536335469[438] = 0;
   out_6389863516536335469[439] = 0;
   out_6389863516536335469[440] = 1;
}
void h_4(double *state, double *unused, double *out_7661006871823619503) {
   out_7661006871823619503[0] = state[10] + state[13];
   out_7661006871823619503[1] = state[11] + state[14];
   out_7661006871823619503[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7501541336268905998) {
   out_7501541336268905998[0] = 0;
   out_7501541336268905998[1] = 0;
   out_7501541336268905998[2] = 0;
   out_7501541336268905998[3] = 0;
   out_7501541336268905998[4] = 0;
   out_7501541336268905998[5] = 0;
   out_7501541336268905998[6] = 0;
   out_7501541336268905998[7] = 0;
   out_7501541336268905998[8] = 0;
   out_7501541336268905998[9] = 0;
   out_7501541336268905998[10] = 1;
   out_7501541336268905998[11] = 0;
   out_7501541336268905998[12] = 0;
   out_7501541336268905998[13] = 1;
   out_7501541336268905998[14] = 0;
   out_7501541336268905998[15] = 0;
   out_7501541336268905998[16] = 0;
   out_7501541336268905998[17] = 0;
   out_7501541336268905998[18] = 0;
   out_7501541336268905998[19] = 0;
   out_7501541336268905998[20] = 0;
   out_7501541336268905998[21] = 0;
   out_7501541336268905998[22] = 0;
   out_7501541336268905998[23] = 0;
   out_7501541336268905998[24] = 0;
   out_7501541336268905998[25] = 0;
   out_7501541336268905998[26] = 0;
   out_7501541336268905998[27] = 0;
   out_7501541336268905998[28] = 0;
   out_7501541336268905998[29] = 0;
   out_7501541336268905998[30] = 0;
   out_7501541336268905998[31] = 0;
   out_7501541336268905998[32] = 0;
   out_7501541336268905998[33] = 1;
   out_7501541336268905998[34] = 0;
   out_7501541336268905998[35] = 0;
   out_7501541336268905998[36] = 1;
   out_7501541336268905998[37] = 0;
   out_7501541336268905998[38] = 0;
   out_7501541336268905998[39] = 0;
   out_7501541336268905998[40] = 0;
   out_7501541336268905998[41] = 0;
   out_7501541336268905998[42] = 0;
   out_7501541336268905998[43] = 0;
   out_7501541336268905998[44] = 0;
   out_7501541336268905998[45] = 0;
   out_7501541336268905998[46] = 0;
   out_7501541336268905998[47] = 0;
   out_7501541336268905998[48] = 0;
   out_7501541336268905998[49] = 0;
   out_7501541336268905998[50] = 0;
   out_7501541336268905998[51] = 0;
   out_7501541336268905998[52] = 0;
   out_7501541336268905998[53] = 0;
   out_7501541336268905998[54] = 0;
   out_7501541336268905998[55] = 0;
   out_7501541336268905998[56] = 1;
   out_7501541336268905998[57] = 0;
   out_7501541336268905998[58] = 0;
   out_7501541336268905998[59] = 1;
   out_7501541336268905998[60] = 0;
   out_7501541336268905998[61] = 0;
   out_7501541336268905998[62] = 0;
   out_7501541336268905998[63] = 0;
   out_7501541336268905998[64] = 0;
   out_7501541336268905998[65] = 0;
}
void h_9(double *state, double *unused, double *out_4926267146494518877) {
   out_4926267146494518877[0] = state[10];
   out_4926267146494518877[1] = state[11];
   out_4926267146494518877[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7260351689639315353) {
   out_7260351689639315353[0] = 0;
   out_7260351689639315353[1] = 0;
   out_7260351689639315353[2] = 0;
   out_7260351689639315353[3] = 0;
   out_7260351689639315353[4] = 0;
   out_7260351689639315353[5] = 0;
   out_7260351689639315353[6] = 0;
   out_7260351689639315353[7] = 0;
   out_7260351689639315353[8] = 0;
   out_7260351689639315353[9] = 0;
   out_7260351689639315353[10] = 1;
   out_7260351689639315353[11] = 0;
   out_7260351689639315353[12] = 0;
   out_7260351689639315353[13] = 0;
   out_7260351689639315353[14] = 0;
   out_7260351689639315353[15] = 0;
   out_7260351689639315353[16] = 0;
   out_7260351689639315353[17] = 0;
   out_7260351689639315353[18] = 0;
   out_7260351689639315353[19] = 0;
   out_7260351689639315353[20] = 0;
   out_7260351689639315353[21] = 0;
   out_7260351689639315353[22] = 0;
   out_7260351689639315353[23] = 0;
   out_7260351689639315353[24] = 0;
   out_7260351689639315353[25] = 0;
   out_7260351689639315353[26] = 0;
   out_7260351689639315353[27] = 0;
   out_7260351689639315353[28] = 0;
   out_7260351689639315353[29] = 0;
   out_7260351689639315353[30] = 0;
   out_7260351689639315353[31] = 0;
   out_7260351689639315353[32] = 0;
   out_7260351689639315353[33] = 1;
   out_7260351689639315353[34] = 0;
   out_7260351689639315353[35] = 0;
   out_7260351689639315353[36] = 0;
   out_7260351689639315353[37] = 0;
   out_7260351689639315353[38] = 0;
   out_7260351689639315353[39] = 0;
   out_7260351689639315353[40] = 0;
   out_7260351689639315353[41] = 0;
   out_7260351689639315353[42] = 0;
   out_7260351689639315353[43] = 0;
   out_7260351689639315353[44] = 0;
   out_7260351689639315353[45] = 0;
   out_7260351689639315353[46] = 0;
   out_7260351689639315353[47] = 0;
   out_7260351689639315353[48] = 0;
   out_7260351689639315353[49] = 0;
   out_7260351689639315353[50] = 0;
   out_7260351689639315353[51] = 0;
   out_7260351689639315353[52] = 0;
   out_7260351689639315353[53] = 0;
   out_7260351689639315353[54] = 0;
   out_7260351689639315353[55] = 0;
   out_7260351689639315353[56] = 1;
   out_7260351689639315353[57] = 0;
   out_7260351689639315353[58] = 0;
   out_7260351689639315353[59] = 0;
   out_7260351689639315353[60] = 0;
   out_7260351689639315353[61] = 0;
   out_7260351689639315353[62] = 0;
   out_7260351689639315353[63] = 0;
   out_7260351689639315353[64] = 0;
   out_7260351689639315353[65] = 0;
}
void h_10(double *state, double *unused, double *out_652311280382873356) {
   out_652311280382873356[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_652311280382873356[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_652311280382873356[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6526497181785554798) {
   out_6526497181785554798[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6526497181785554798[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6526497181785554798[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6526497181785554798[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6526497181785554798[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6526497181785554798[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6526497181785554798[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6526497181785554798[7] = 0;
   out_6526497181785554798[8] = 0;
   out_6526497181785554798[9] = 0;
   out_6526497181785554798[10] = 0;
   out_6526497181785554798[11] = 0;
   out_6526497181785554798[12] = 0;
   out_6526497181785554798[13] = 0;
   out_6526497181785554798[14] = 0;
   out_6526497181785554798[15] = 0;
   out_6526497181785554798[16] = 1;
   out_6526497181785554798[17] = 0;
   out_6526497181785554798[18] = 0;
   out_6526497181785554798[19] = 1;
   out_6526497181785554798[20] = 0;
   out_6526497181785554798[21] = 0;
   out_6526497181785554798[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6526497181785554798[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6526497181785554798[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6526497181785554798[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6526497181785554798[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6526497181785554798[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6526497181785554798[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6526497181785554798[29] = 0;
   out_6526497181785554798[30] = 0;
   out_6526497181785554798[31] = 0;
   out_6526497181785554798[32] = 0;
   out_6526497181785554798[33] = 0;
   out_6526497181785554798[34] = 0;
   out_6526497181785554798[35] = 0;
   out_6526497181785554798[36] = 0;
   out_6526497181785554798[37] = 0;
   out_6526497181785554798[38] = 0;
   out_6526497181785554798[39] = 1;
   out_6526497181785554798[40] = 0;
   out_6526497181785554798[41] = 0;
   out_6526497181785554798[42] = 1;
   out_6526497181785554798[43] = 0;
   out_6526497181785554798[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6526497181785554798[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6526497181785554798[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6526497181785554798[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6526497181785554798[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6526497181785554798[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6526497181785554798[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6526497181785554798[51] = 0;
   out_6526497181785554798[52] = 0;
   out_6526497181785554798[53] = 0;
   out_6526497181785554798[54] = 0;
   out_6526497181785554798[55] = 0;
   out_6526497181785554798[56] = 0;
   out_6526497181785554798[57] = 0;
   out_6526497181785554798[58] = 0;
   out_6526497181785554798[59] = 0;
   out_6526497181785554798[60] = 0;
   out_6526497181785554798[61] = 0;
   out_6526497181785554798[62] = 1;
   out_6526497181785554798[63] = 0;
   out_6526497181785554798[64] = 0;
   out_6526497181785554798[65] = 1;
}
void h_12(double *state, double *unused, double *out_4327059784582922294) {
   out_4327059784582922294[0] = state[0];
   out_4327059784582922294[1] = state[1];
   out_4327059784582922294[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6880442311221312331) {
   out_6880442311221312331[0] = 1;
   out_6880442311221312331[1] = 0;
   out_6880442311221312331[2] = 0;
   out_6880442311221312331[3] = 0;
   out_6880442311221312331[4] = 0;
   out_6880442311221312331[5] = 0;
   out_6880442311221312331[6] = 0;
   out_6880442311221312331[7] = 0;
   out_6880442311221312331[8] = 0;
   out_6880442311221312331[9] = 0;
   out_6880442311221312331[10] = 0;
   out_6880442311221312331[11] = 0;
   out_6880442311221312331[12] = 0;
   out_6880442311221312331[13] = 0;
   out_6880442311221312331[14] = 0;
   out_6880442311221312331[15] = 0;
   out_6880442311221312331[16] = 0;
   out_6880442311221312331[17] = 0;
   out_6880442311221312331[18] = 0;
   out_6880442311221312331[19] = 0;
   out_6880442311221312331[20] = 0;
   out_6880442311221312331[21] = 0;
   out_6880442311221312331[22] = 0;
   out_6880442311221312331[23] = 1;
   out_6880442311221312331[24] = 0;
   out_6880442311221312331[25] = 0;
   out_6880442311221312331[26] = 0;
   out_6880442311221312331[27] = 0;
   out_6880442311221312331[28] = 0;
   out_6880442311221312331[29] = 0;
   out_6880442311221312331[30] = 0;
   out_6880442311221312331[31] = 0;
   out_6880442311221312331[32] = 0;
   out_6880442311221312331[33] = 0;
   out_6880442311221312331[34] = 0;
   out_6880442311221312331[35] = 0;
   out_6880442311221312331[36] = 0;
   out_6880442311221312331[37] = 0;
   out_6880442311221312331[38] = 0;
   out_6880442311221312331[39] = 0;
   out_6880442311221312331[40] = 0;
   out_6880442311221312331[41] = 0;
   out_6880442311221312331[42] = 0;
   out_6880442311221312331[43] = 0;
   out_6880442311221312331[44] = 0;
   out_6880442311221312331[45] = 0;
   out_6880442311221312331[46] = 1;
   out_6880442311221312331[47] = 0;
   out_6880442311221312331[48] = 0;
   out_6880442311221312331[49] = 0;
   out_6880442311221312331[50] = 0;
   out_6880442311221312331[51] = 0;
   out_6880442311221312331[52] = 0;
   out_6880442311221312331[53] = 0;
   out_6880442311221312331[54] = 0;
   out_6880442311221312331[55] = 0;
   out_6880442311221312331[56] = 0;
   out_6880442311221312331[57] = 0;
   out_6880442311221312331[58] = 0;
   out_6880442311221312331[59] = 0;
   out_6880442311221312331[60] = 0;
   out_6880442311221312331[61] = 0;
   out_6880442311221312331[62] = 0;
   out_6880442311221312331[63] = 0;
   out_6880442311221312331[64] = 0;
   out_6880442311221312331[65] = 0;
}
void h_31(double *state, double *unused, double *out_5720054282446494434) {
   out_5720054282446494434[0] = state[7];
   out_5720054282446494434[1] = state[8];
   out_5720054282446494434[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4134879278896298622) {
   out_4134879278896298622[0] = 0;
   out_4134879278896298622[1] = 0;
   out_4134879278896298622[2] = 0;
   out_4134879278896298622[3] = 0;
   out_4134879278896298622[4] = 0;
   out_4134879278896298622[5] = 0;
   out_4134879278896298622[6] = 0;
   out_4134879278896298622[7] = 1;
   out_4134879278896298622[8] = 0;
   out_4134879278896298622[9] = 0;
   out_4134879278896298622[10] = 0;
   out_4134879278896298622[11] = 0;
   out_4134879278896298622[12] = 0;
   out_4134879278896298622[13] = 0;
   out_4134879278896298622[14] = 0;
   out_4134879278896298622[15] = 0;
   out_4134879278896298622[16] = 0;
   out_4134879278896298622[17] = 0;
   out_4134879278896298622[18] = 0;
   out_4134879278896298622[19] = 0;
   out_4134879278896298622[20] = 0;
   out_4134879278896298622[21] = 0;
   out_4134879278896298622[22] = 0;
   out_4134879278896298622[23] = 0;
   out_4134879278896298622[24] = 0;
   out_4134879278896298622[25] = 0;
   out_4134879278896298622[26] = 0;
   out_4134879278896298622[27] = 0;
   out_4134879278896298622[28] = 0;
   out_4134879278896298622[29] = 0;
   out_4134879278896298622[30] = 1;
   out_4134879278896298622[31] = 0;
   out_4134879278896298622[32] = 0;
   out_4134879278896298622[33] = 0;
   out_4134879278896298622[34] = 0;
   out_4134879278896298622[35] = 0;
   out_4134879278896298622[36] = 0;
   out_4134879278896298622[37] = 0;
   out_4134879278896298622[38] = 0;
   out_4134879278896298622[39] = 0;
   out_4134879278896298622[40] = 0;
   out_4134879278896298622[41] = 0;
   out_4134879278896298622[42] = 0;
   out_4134879278896298622[43] = 0;
   out_4134879278896298622[44] = 0;
   out_4134879278896298622[45] = 0;
   out_4134879278896298622[46] = 0;
   out_4134879278896298622[47] = 0;
   out_4134879278896298622[48] = 0;
   out_4134879278896298622[49] = 0;
   out_4134879278896298622[50] = 0;
   out_4134879278896298622[51] = 0;
   out_4134879278896298622[52] = 0;
   out_4134879278896298622[53] = 1;
   out_4134879278896298622[54] = 0;
   out_4134879278896298622[55] = 0;
   out_4134879278896298622[56] = 0;
   out_4134879278896298622[57] = 0;
   out_4134879278896298622[58] = 0;
   out_4134879278896298622[59] = 0;
   out_4134879278896298622[60] = 0;
   out_4134879278896298622[61] = 0;
   out_4134879278896298622[62] = 0;
   out_4134879278896298622[63] = 0;
   out_4134879278896298622[64] = 0;
   out_4134879278896298622[65] = 0;
}
void h_32(double *state, double *unused, double *out_6542287694810245299) {
   out_6542287694810245299[0] = state[3];
   out_6542287694810245299[1] = state[4];
   out_6542287694810245299[2] = state[5];
   out_6542287694810245299[3] = state[6];
}
void H_32(double *state, double *unused, double *out_587034938909139893) {
   out_587034938909139893[0] = 0;
   out_587034938909139893[1] = 0;
   out_587034938909139893[2] = 0;
   out_587034938909139893[3] = 1;
   out_587034938909139893[4] = 0;
   out_587034938909139893[5] = 0;
   out_587034938909139893[6] = 0;
   out_587034938909139893[7] = 0;
   out_587034938909139893[8] = 0;
   out_587034938909139893[9] = 0;
   out_587034938909139893[10] = 0;
   out_587034938909139893[11] = 0;
   out_587034938909139893[12] = 0;
   out_587034938909139893[13] = 0;
   out_587034938909139893[14] = 0;
   out_587034938909139893[15] = 0;
   out_587034938909139893[16] = 0;
   out_587034938909139893[17] = 0;
   out_587034938909139893[18] = 0;
   out_587034938909139893[19] = 0;
   out_587034938909139893[20] = 0;
   out_587034938909139893[21] = 0;
   out_587034938909139893[22] = 0;
   out_587034938909139893[23] = 0;
   out_587034938909139893[24] = 0;
   out_587034938909139893[25] = 0;
   out_587034938909139893[26] = 1;
   out_587034938909139893[27] = 0;
   out_587034938909139893[28] = 0;
   out_587034938909139893[29] = 0;
   out_587034938909139893[30] = 0;
   out_587034938909139893[31] = 0;
   out_587034938909139893[32] = 0;
   out_587034938909139893[33] = 0;
   out_587034938909139893[34] = 0;
   out_587034938909139893[35] = 0;
   out_587034938909139893[36] = 0;
   out_587034938909139893[37] = 0;
   out_587034938909139893[38] = 0;
   out_587034938909139893[39] = 0;
   out_587034938909139893[40] = 0;
   out_587034938909139893[41] = 0;
   out_587034938909139893[42] = 0;
   out_587034938909139893[43] = 0;
   out_587034938909139893[44] = 0;
   out_587034938909139893[45] = 0;
   out_587034938909139893[46] = 0;
   out_587034938909139893[47] = 0;
   out_587034938909139893[48] = 0;
   out_587034938909139893[49] = 1;
   out_587034938909139893[50] = 0;
   out_587034938909139893[51] = 0;
   out_587034938909139893[52] = 0;
   out_587034938909139893[53] = 0;
   out_587034938909139893[54] = 0;
   out_587034938909139893[55] = 0;
   out_587034938909139893[56] = 0;
   out_587034938909139893[57] = 0;
   out_587034938909139893[58] = 0;
   out_587034938909139893[59] = 0;
   out_587034938909139893[60] = 0;
   out_587034938909139893[61] = 0;
   out_587034938909139893[62] = 0;
   out_587034938909139893[63] = 0;
   out_587034938909139893[64] = 0;
   out_587034938909139893[65] = 0;
   out_587034938909139893[66] = 0;
   out_587034938909139893[67] = 0;
   out_587034938909139893[68] = 0;
   out_587034938909139893[69] = 0;
   out_587034938909139893[70] = 0;
   out_587034938909139893[71] = 0;
   out_587034938909139893[72] = 1;
   out_587034938909139893[73] = 0;
   out_587034938909139893[74] = 0;
   out_587034938909139893[75] = 0;
   out_587034938909139893[76] = 0;
   out_587034938909139893[77] = 0;
   out_587034938909139893[78] = 0;
   out_587034938909139893[79] = 0;
   out_587034938909139893[80] = 0;
   out_587034938909139893[81] = 0;
   out_587034938909139893[82] = 0;
   out_587034938909139893[83] = 0;
   out_587034938909139893[84] = 0;
   out_587034938909139893[85] = 0;
   out_587034938909139893[86] = 0;
   out_587034938909139893[87] = 0;
}
void h_13(double *state, double *unused, double *out_2498144898772092043) {
   out_2498144898772092043[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2498144898772092043[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2498144898772092043[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_482060401086535411) {
   out_482060401086535411[0] = 0;
   out_482060401086535411[1] = 0;
   out_482060401086535411[2] = 0;
   out_482060401086535411[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_482060401086535411[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_482060401086535411[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_482060401086535411[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_482060401086535411[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_482060401086535411[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_482060401086535411[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_482060401086535411[10] = 0;
   out_482060401086535411[11] = 0;
   out_482060401086535411[12] = 0;
   out_482060401086535411[13] = 0;
   out_482060401086535411[14] = 0;
   out_482060401086535411[15] = 0;
   out_482060401086535411[16] = 0;
   out_482060401086535411[17] = 0;
   out_482060401086535411[18] = 0;
   out_482060401086535411[19] = 0;
   out_482060401086535411[20] = 0;
   out_482060401086535411[21] = 0;
   out_482060401086535411[22] = 0;
   out_482060401086535411[23] = 0;
   out_482060401086535411[24] = 0;
   out_482060401086535411[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_482060401086535411[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_482060401086535411[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_482060401086535411[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_482060401086535411[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_482060401086535411[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_482060401086535411[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_482060401086535411[32] = 0;
   out_482060401086535411[33] = 0;
   out_482060401086535411[34] = 0;
   out_482060401086535411[35] = 0;
   out_482060401086535411[36] = 0;
   out_482060401086535411[37] = 0;
   out_482060401086535411[38] = 0;
   out_482060401086535411[39] = 0;
   out_482060401086535411[40] = 0;
   out_482060401086535411[41] = 0;
   out_482060401086535411[42] = 0;
   out_482060401086535411[43] = 0;
   out_482060401086535411[44] = 0;
   out_482060401086535411[45] = 0;
   out_482060401086535411[46] = 0;
   out_482060401086535411[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_482060401086535411[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_482060401086535411[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_482060401086535411[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_482060401086535411[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_482060401086535411[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_482060401086535411[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_482060401086535411[54] = 0;
   out_482060401086535411[55] = 0;
   out_482060401086535411[56] = 0;
   out_482060401086535411[57] = 0;
   out_482060401086535411[58] = 0;
   out_482060401086535411[59] = 0;
   out_482060401086535411[60] = 0;
   out_482060401086535411[61] = 0;
   out_482060401086535411[62] = 0;
   out_482060401086535411[63] = 0;
   out_482060401086535411[64] = 0;
   out_482060401086535411[65] = 0;
}
void h_14(double *state, double *unused, double *out_4926267146494518877) {
   out_4926267146494518877[0] = state[10];
   out_4926267146494518877[1] = state[11];
   out_4926267146494518877[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7260351689639315353) {
   out_7260351689639315353[0] = 0;
   out_7260351689639315353[1] = 0;
   out_7260351689639315353[2] = 0;
   out_7260351689639315353[3] = 0;
   out_7260351689639315353[4] = 0;
   out_7260351689639315353[5] = 0;
   out_7260351689639315353[6] = 0;
   out_7260351689639315353[7] = 0;
   out_7260351689639315353[8] = 0;
   out_7260351689639315353[9] = 0;
   out_7260351689639315353[10] = 1;
   out_7260351689639315353[11] = 0;
   out_7260351689639315353[12] = 0;
   out_7260351689639315353[13] = 0;
   out_7260351689639315353[14] = 0;
   out_7260351689639315353[15] = 0;
   out_7260351689639315353[16] = 0;
   out_7260351689639315353[17] = 0;
   out_7260351689639315353[18] = 0;
   out_7260351689639315353[19] = 0;
   out_7260351689639315353[20] = 0;
   out_7260351689639315353[21] = 0;
   out_7260351689639315353[22] = 0;
   out_7260351689639315353[23] = 0;
   out_7260351689639315353[24] = 0;
   out_7260351689639315353[25] = 0;
   out_7260351689639315353[26] = 0;
   out_7260351689639315353[27] = 0;
   out_7260351689639315353[28] = 0;
   out_7260351689639315353[29] = 0;
   out_7260351689639315353[30] = 0;
   out_7260351689639315353[31] = 0;
   out_7260351689639315353[32] = 0;
   out_7260351689639315353[33] = 1;
   out_7260351689639315353[34] = 0;
   out_7260351689639315353[35] = 0;
   out_7260351689639315353[36] = 0;
   out_7260351689639315353[37] = 0;
   out_7260351689639315353[38] = 0;
   out_7260351689639315353[39] = 0;
   out_7260351689639315353[40] = 0;
   out_7260351689639315353[41] = 0;
   out_7260351689639315353[42] = 0;
   out_7260351689639315353[43] = 0;
   out_7260351689639315353[44] = 0;
   out_7260351689639315353[45] = 0;
   out_7260351689639315353[46] = 0;
   out_7260351689639315353[47] = 0;
   out_7260351689639315353[48] = 0;
   out_7260351689639315353[49] = 0;
   out_7260351689639315353[50] = 0;
   out_7260351689639315353[51] = 0;
   out_7260351689639315353[52] = 0;
   out_7260351689639315353[53] = 0;
   out_7260351689639315353[54] = 0;
   out_7260351689639315353[55] = 0;
   out_7260351689639315353[56] = 1;
   out_7260351689639315353[57] = 0;
   out_7260351689639315353[58] = 0;
   out_7260351689639315353[59] = 0;
   out_7260351689639315353[60] = 0;
   out_7260351689639315353[61] = 0;
   out_7260351689639315353[62] = 0;
   out_7260351689639315353[63] = 0;
   out_7260351689639315353[64] = 0;
   out_7260351689639315353[65] = 0;
}
void h_33(double *state, double *unused, double *out_4451523588948760961) {
   out_4451523588948760961[0] = state[16];
   out_4451523588948760961[1] = state[17];
   out_4451523588948760961[2] = state[18];
}
void H_33(double *state, double *unused, double *out_984322274257441018) {
   out_984322274257441018[0] = 0;
   out_984322274257441018[1] = 0;
   out_984322274257441018[2] = 0;
   out_984322274257441018[3] = 0;
   out_984322274257441018[4] = 0;
   out_984322274257441018[5] = 0;
   out_984322274257441018[6] = 0;
   out_984322274257441018[7] = 0;
   out_984322274257441018[8] = 0;
   out_984322274257441018[9] = 0;
   out_984322274257441018[10] = 0;
   out_984322274257441018[11] = 0;
   out_984322274257441018[12] = 0;
   out_984322274257441018[13] = 0;
   out_984322274257441018[14] = 0;
   out_984322274257441018[15] = 0;
   out_984322274257441018[16] = 1;
   out_984322274257441018[17] = 0;
   out_984322274257441018[18] = 0;
   out_984322274257441018[19] = 0;
   out_984322274257441018[20] = 0;
   out_984322274257441018[21] = 0;
   out_984322274257441018[22] = 0;
   out_984322274257441018[23] = 0;
   out_984322274257441018[24] = 0;
   out_984322274257441018[25] = 0;
   out_984322274257441018[26] = 0;
   out_984322274257441018[27] = 0;
   out_984322274257441018[28] = 0;
   out_984322274257441018[29] = 0;
   out_984322274257441018[30] = 0;
   out_984322274257441018[31] = 0;
   out_984322274257441018[32] = 0;
   out_984322274257441018[33] = 0;
   out_984322274257441018[34] = 0;
   out_984322274257441018[35] = 0;
   out_984322274257441018[36] = 0;
   out_984322274257441018[37] = 0;
   out_984322274257441018[38] = 0;
   out_984322274257441018[39] = 1;
   out_984322274257441018[40] = 0;
   out_984322274257441018[41] = 0;
   out_984322274257441018[42] = 0;
   out_984322274257441018[43] = 0;
   out_984322274257441018[44] = 0;
   out_984322274257441018[45] = 0;
   out_984322274257441018[46] = 0;
   out_984322274257441018[47] = 0;
   out_984322274257441018[48] = 0;
   out_984322274257441018[49] = 0;
   out_984322274257441018[50] = 0;
   out_984322274257441018[51] = 0;
   out_984322274257441018[52] = 0;
   out_984322274257441018[53] = 0;
   out_984322274257441018[54] = 0;
   out_984322274257441018[55] = 0;
   out_984322274257441018[56] = 0;
   out_984322274257441018[57] = 0;
   out_984322274257441018[58] = 0;
   out_984322274257441018[59] = 0;
   out_984322274257441018[60] = 0;
   out_984322274257441018[61] = 0;
   out_984322274257441018[62] = 1;
   out_984322274257441018[63] = 0;
   out_984322274257441018[64] = 0;
   out_984322274257441018[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4028264744687795352) {
  H(in_vec, out_4028264744687795352);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8435331516567488924) {
  err_fun(nom_x, delta_x, out_8435331516567488924);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5002002164599025613) {
  inv_err_fun(nom_x, true_x, out_5002002164599025613);
}
void live_H_mod_fun(double *state, double *out_3440322527295895629) {
  H_mod_fun(state, out_3440322527295895629);
}
void live_f_fun(double *state, double dt, double *out_6600220164658986461) {
  f_fun(state,  dt, out_6600220164658986461);
}
void live_F_fun(double *state, double dt, double *out_6389863516536335469) {
  F_fun(state,  dt, out_6389863516536335469);
}
void live_h_4(double *state, double *unused, double *out_7661006871823619503) {
  h_4(state, unused, out_7661006871823619503);
}
void live_H_4(double *state, double *unused, double *out_7501541336268905998) {
  H_4(state, unused, out_7501541336268905998);
}
void live_h_9(double *state, double *unused, double *out_4926267146494518877) {
  h_9(state, unused, out_4926267146494518877);
}
void live_H_9(double *state, double *unused, double *out_7260351689639315353) {
  H_9(state, unused, out_7260351689639315353);
}
void live_h_10(double *state, double *unused, double *out_652311280382873356) {
  h_10(state, unused, out_652311280382873356);
}
void live_H_10(double *state, double *unused, double *out_6526497181785554798) {
  H_10(state, unused, out_6526497181785554798);
}
void live_h_12(double *state, double *unused, double *out_4327059784582922294) {
  h_12(state, unused, out_4327059784582922294);
}
void live_H_12(double *state, double *unused, double *out_6880442311221312331) {
  H_12(state, unused, out_6880442311221312331);
}
void live_h_31(double *state, double *unused, double *out_5720054282446494434) {
  h_31(state, unused, out_5720054282446494434);
}
void live_H_31(double *state, double *unused, double *out_4134879278896298622) {
  H_31(state, unused, out_4134879278896298622);
}
void live_h_32(double *state, double *unused, double *out_6542287694810245299) {
  h_32(state, unused, out_6542287694810245299);
}
void live_H_32(double *state, double *unused, double *out_587034938909139893) {
  H_32(state, unused, out_587034938909139893);
}
void live_h_13(double *state, double *unused, double *out_2498144898772092043) {
  h_13(state, unused, out_2498144898772092043);
}
void live_H_13(double *state, double *unused, double *out_482060401086535411) {
  H_13(state, unused, out_482060401086535411);
}
void live_h_14(double *state, double *unused, double *out_4926267146494518877) {
  h_14(state, unused, out_4926267146494518877);
}
void live_H_14(double *state, double *unused, double *out_7260351689639315353) {
  H_14(state, unused, out_7260351689639315353);
}
void live_h_33(double *state, double *unused, double *out_4451523588948760961) {
  h_33(state, unused, out_4451523588948760961);
}
void live_H_33(double *state, double *unused, double *out_984322274257441018) {
  H_33(state, unused, out_984322274257441018);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
